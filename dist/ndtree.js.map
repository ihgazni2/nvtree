{"version":3,"sources":["webpack://NDTREEJS/webpack/universalModuleDefinition","webpack://NDTREEJS/webpack/bootstrap","webpack://NDTREEJS/./cmmn.js","webpack://NDTREEJS/./ndfunc.js","webpack://NDTREEJS/./util.js","webpack://NDTREEJS/./index.js","webpack://NDTREEJS/./ndcls.js","webpack://NDTREEJS/(webpack)/node_modules/buffer/index.js","webpack://NDTREEJS/(webpack)/buildin/global.js","webpack://NDTREEJS/(webpack)/node_modules/base64-js/index.js","webpack://NDTREEJS/(webpack)/node_modules/ieee754/index.js","webpack://NDTREEJS/(webpack)/node_modules/isarray/index.js","webpack://NDTREEJS/./event-target.js","webpack://NDTREEJS/./ndfuncterm.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","dict_length","entries","gen_guid","replace","Math","random","toString","range","si","ei","Array","from","length","map","v","seqs_slct","seqs","arr","filter","includes","is_empty_dict","dict_values","dict_keys","dict_map","f","k","dict_foreach","dict_plus","d0","d1","dict_update","dtb_kv_rm","dtb","dtb_kv_get_seq","findIndex","dcp","JSON","parse","stringify","mat_map","map_func","lyr","j","is_cu_property","prop","cond0","cond1","cmmn","calc_next_id","nodes","ids","max","is_id","update_one_nodeid","nd","idplus","_id","_tree","_fstch","_lsib","_rsib","_parent","update_nodes_ids","nodes0","nodes1","next_id","id","nnd","is_inited","undefined","is_root","is_fstch","is_lstch","is_leaf","is_lonely","get_children","get_parent","is_connectable","prepend_child","child","console","log","cond","old_fstch","append_child","old_lstch","get_lstch","add_rsib","rsib","add_lsib","lsib","parent","get_lsib","insert_child","which","children","lngth","update_treeid","cnodes","update_disconnected_nodes","nsdfs","get_sdfs","treeid","forEach","update_orig_nodes","nnodes","leafize","rootize","disconnect","get_rsib","get_fstch","push","get_which_child","get_some_children","whiches","some","get_lstsib","including_self","lstrsib","get_sibs","sibs","seq","get_depth","get_ances","get_height","depth","des_depths","get_lyr","sdfs","get_root","get_breadth","lst_parent","ances","unshift","get_rsib_of_fst_ance_having_rsib","get_sdfs_next","fstch","get_drmost_des","lstch","nd_depth","get_dlmost_des","get_edfs_next","get_lsib_of_fst_ance_having_lsib","get_edfs","edfs","nxt","clear_$visited","_$visited","get_sedfs_next","visited","is_sedfs_traverse_finished","start_id","get_sedfs","deepcopy","clear","sedfs","_nd2unhandled_ele","ele","_children","sdfs2mat","unhandled","_pbreadth","next_unhandled","_breadth","_depth","index","concat","sdfs2edfs","sdfs2sedfs","edfs2sdfs","sedfs2sdfs","get_deses","deses","splice","get_which_lyr_deses","get_root_via_tree","tree","creat_root","creat_nd","get_fstsib","get_preceding_sibs","get_following_sibs","get_which_sib","get_some_sibs","get_sibseq","get_count","get_fst_lyr_des_depth","get_lst_lyr_des_depth","get_which_lyr_des_depth","get_which_ance","get_some_ances","get_sdfs_prev","get_edfs_prev","get_sedfs_prev","get_fst_lyr_deses","get_lst_lyr_deses","get_some_lyrs_deses","nd2ele","edfs2mat","edfs2sedfs","sedfs2mat","sedfs2edfs","rm_fstch","rm_lstch","rm_which","rm_some","whices","rm_all","prepend_child_tree","append_child_tree","add_rsib_tree","add_lsib_tree","insert_child_tree","tree2sdfs","rjson","fn","globalThis","document","require","readFileSync","wjson","js","fs","writeFileSync","is_int_str","parseInt","ndcls","ndfunc","ndfuncterm","ndutil","EventTarget","STRUCT_KEYS","_is_inited","_is_root","_is_connectable","_lstch","oldch","_which_child","_some_children","_lstsib","oldrsib","_fstsib","fstsib","_psibs","psibs","sib","_fsibs","fsibs","_sibs","me","_sibseq","_ances","ance","$parent","_deses","drmost","_drmost_des","_sdfs","indexOf","slice","_prepend_child","$is_leaf","_append_child","$lstch","_add_rsib","$is_root","$is_lstch","_insert_child","$depth","$sdfs_next","_sedfs_next","$visited","$rsib","$fstch","_is_sedfs_traverse_finished","startnd","_sedfs","$sdfs","_clear_visited","st","Set","has","$close_at","$open_at","add","_rootize","_update_disconnected_nodes","_disconn","$is_lonely","_leafize","$is_fstch","$lsib","_nd","_sdfs2mat","$children","_init_nest_dele_via_ele","children_k","$guid","_init_node_via_nest_dele","Tree","_Node","super","$sibs","indexes","old","_load","_dump","dup","ch","$clone","$rsib_of_fst_ance_having_rsib","$drmost_des","$dlmost_des","$lsib_of_fst_ance_having_lsib","$edfs_next","$root","$edfs","dlmost","offset","$deses","rel_depths","abs_depths","$breadth","$lyr","luncle","$luncle","runcle","$runcle","repeat","indent","_set_id","ndict","nest","orb","chele","chd","unhandled_ele","_mat_to_nest_dict","_get_ancend_via_id","fill_other_attrs_for_load","other_ks","get_non_struct_keys","rt","_guid","_rtjson2rt","prnd","prnj","nj","$prepend_child","$add_rsib","$append_child","_dictize_nd_property","nodes_dict","fill_other_attrs_for_dump","$ances","ndindex","this_index","indexof","$sibseq","load","get_cu_sign","cu_sign_func","args","out","Buffer","get_internal_sign_ignore_order","internal","join","get_internal_sign_keep_order","$pbreadth","get_sign_ignore_order","sign","get_sign_keep_order","struct_eq","reorder","sign_func","tree0","tree1","sdfs0","sdfs1","signs0","signs1","sort","Node","Root","load_from_nest_dict","chnd","clone","$dump","struct_eq_keep_order","struct_eq_ignore_order","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","Error","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","g","Function","window","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","abs","LN2","callback","options","event","dflt_sdfs_show_connd","dflt_edfs_show_connd","dflt_calc_conn_map_func","conn","rslt","conns2repr","conns","show_connd","clear_ui","_ui","dflt_sdfs_calc_conns","display","get_sdfs_repr_arr","conns_array","dflt_sdfs_show_callback","dflt_edfs_show_callback","dflt_edfs_calc_conns","get_edfs_repr_arr","reverse","dflt_sedfs_show_connd","stag_prefix","stag_suffix","etag_prefix","etag_suffix","gen_tag","tag","prefix","suffix","sdfs_show_all","repr","sdfs_show_root_tree","sdfs_show_from","sdfs_show_to","to","sdfs_show_from_to","sdfs_expand","sdfs_foldup","edfs_show_all","edfs_show_root_tree","edfs_show_from","edfs_show_to","edfs_show_from_to","sedfs_show_all","depths","indents"],"mappings":"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","file":"ndtree.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NDTREEJS\"] = factory();\n\telse\n\t\troot[\"NDTREEJS\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","\nfunction gen_guid() {\n    return(\n        'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n            /[xy]/g,\n            function(c) {\n                let r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8)\n                return(v.toString(16))\n            }\n         )\n    )\n}\n\n\n\nfunction range(si,ei) {\n    return(Array.from({ length: ei-si }).map((v, i) => i + si))\n}\n\nfunction seqs_slct(seqs,arr) {\n    return(arr.filter((r,i)=>(seqs.includes(i))))\n}\n\n\nfunction dict_length(d) {\n    return(Object.entries(d).length)\n}\n\nfunction is_empty_dict(d) {\n    return(Object.entries(d).length === 0)\n}\n\nfunction dict_values(d) {\n    let entries = Object.entries(d)\n    let values = entries.map(r=>r[1])\n    return(values)\n}\n\nfunction dict_keys(d) {\n    let entries = Object.entries(d)\n    let keys = entries.map(r=>r[0])\n    return(keys)\n}\n\nfunction dict_length(d) {\n    let entries = Object.entries(d)\n    return(entries.length)\n}\n\nfunction dict_foreach(d,f) {\n    for(let k in d) {\n        f(k,d[k])\n    }\n    return(d)\n}\n\nfunction dict_map(d,f) {\n    for(let k in d) {\n        d[k] = f(k,d[k])\n    }\n    return(d)\n}\n\nfunction dict_plus(d0,d1) {\n    //unique k ,no common k\n    for(let k in d1) {\n        d0[k] =d1[k]\n    }\n    return(d0)    \n}\n\nfunction dict_update(d0,d1) {\n    //unique k ,no common k\n    for(let k in d1) {\n        let cond = !(k in d0)\n        if(cond) {\n            d0[k] =d1[k]\n        }    \n    }\n    return(d0)\n}\n\n\n\nfunction dtb_kv_rm(k,v,dtb) {\n    dtb = dtb.filter(r=>(r[k]!==v))\n    return(dtb)\n}\n\nfunction dtb_kv_get_seq(k,v,dtb) {\n    let seq = dtb.findIndex(r=>r[k]===v)\n    return(seq)\n}\n\nfunction dcp(o) {\n    return(JSON.parse(JSON.stringify(o)))\n}\n\nfunction mat_map(m,map_func) {\n    for(let i=0;i<m.length;i++) {\n        lyr = m[i]\n        for(let j=0;j<lyr.length;j++) {\n            m[i][j] = map_func(m[i][j],i,j)\n        } \n    }\n    return(m)\n}\n\n\nfunction is_cu_property(prop) {\n    let cond0 = (prop[0] !== '_')\n    let cond1 = (prop[0] !== '$')\n    let cond = (cond0 && cond1)\n    return(cond)\n}\n\n\n\nmodule.exports = {\n    gen_guid:gen_guid,\n    range:range,\n    seqs_slct:seqs_slct,\n    dict_length:dict_length,\n    is_empty_dict:is_empty_dict,\n    dict_values:dict_values,\n    dict_keys:dict_keys,\n    dict_map:dict_map,\n    dict_foreach:dict_foreach,\n    dict_length:dict_length,\n    dict_plus,\n    dict_update,\n    dtb_kv_rm,\n    dtb_kv_get_seq,\n    dcp:dcp,\n    mat_map:mat_map,\n    is_cu_property:is_cu_property\n}\n","//\nconst cmmn = require(\"./cmmn.js\")\n\n//tree ndict nodes nnodes same\n\n//util\n\n\n\nfunction calc_next_id(nodes) {\n    if(cmmn.is_empty_dict(nodes)){\n        return(0)\n    } else {\n        let ids = cmmn.dict_keys(nodes)\n        return(Math.max(...ids)+1)\n    }\n}\n\nfunction is_id(n) {\n    let cond = ((n !== null) && (n !== undefined))\n    return(cond) \n}\n\nfunction update_one_nodeid(nd,idplus) {\n    nd._id = nd._id + idplus\n    nd._tree = nd._tree + idplus\n    if(is_id(nd._fstch)) {\n         nd._fstch = nd._fstch + idplus\n    }\n    if(is_id(nd._lsib)) {\n         nd._lsib = nd._lsib + idplus\n    }\n    if(is_id(nd._rsib)) {\n         nd._rsib = nd._rsib + idplus\n    }\n    if(is_id(nd._parent)) {\n         nd._parent = nd._parent + idplus    \n    } \n    return(nd)        \n}\n\n\nfunction update_nodes_ids(nodes0,nodes1) {\n    let next_id = calc_next_id(nodes0)\n    for(let id in nodes1) {\n        let nnd = update_one_nodeid(nodes1[id],next_id) \n        nodes1[nnd._id] = nnd\n        delete nodes1[id]\n    }\n    return(nodes1)\n}\n\n//\n\nfunction creat_root(n=0){\n    let _id = n\n    let root = {\n        _id:_id,\n        _fstch:null,\n        _lsib:null,\n        _rsib:null,\n        _parent:null,\n        _tree:_id  //属于哪个tree\n    }\n    return(root)\n}\n\n\nfunction creat_nd(nodes,n=0) {\n    /*\n        by_dflt  leaf_nd\n    */\n    let _id = calc_next_id(nodes)+n\n    let nd = {\n        _id:_id,\n        _fstch:null,\n        _lsib:undefined,\n        _rsib:undefined,\n        _parent:undefined,\n        _tree:undefined\n    }\n    return(nd)\n}\n\n\n//\n\nfunction is_inited(nd) {\n    //被添加到了树上\n    let cond = (nd._tree !== undefined)\n    return(cond)\n}\n\nfunction is_root(nd) {\n    //tree 是自己\n    let cond0 = (nd._tree!== undefined)\n    let cond1 = (nd._tree === nd._id)\n    return(cond0 && cond1)\n}\n\nfunction is_fstch(nd) {\n    //没有左兄弟\n    let cond = (nd._lsib === null)\n    return(cond)\n}\n\nfunction is_lstch(nd) {\n    //没有右兄弟\n    let cond = (nd._rsib === null)\n    return(cond)\n}\n\nfunction is_leaf(nd) {\n    //没有子\n    let cond = (nd._fstch === null)\n    return(cond)\n}\n\nfunction is_lonely(nd,nodes) {\n    let cond = is_root(nd)\n    if(cond) {\n        return(true)\n    } else {\n        let parent = get_parent(nd,nodes)\n        let children = get_children(parent,nodes)\n        return(children.length === 1)  \n    } \n}\n\nfunction is_connectable(nd) {\n    return(is_root(nd) || !is_inited(nd))\n}\n\n\n\n/*\nfunction eq(nd0,nd1) {\n    //id 必须完全一致\n    //只有同一颗树下自己等于自己\n    let cond0 = (nd0._id === nd1._id)\n    let cond1 = (nd0._tree === nd1._tree)\n    return(cond0 && cond1)\n}\n*/\n\n//\n\nfunction prepend_child(nd,child,nodes) {\n    if(is_connectable(child)) {} else { console.log('only root or uninited could be prepend');return(nd)}\n    //只有根节点才可以被链接到另一颗树上\n    let cond = is_leaf(nd)\n    child._tree = nd._tree\n    child._lsib = null\n    if(cond){\n        //child 也是lstch\n        child._rsib = null\n        child._parent = nd._id\n    } else {\n        //变更old_fstch\n        let old_fstch = nodes[nd._fstch]\n        //old_fstch 不再是fstch\n        old_fstch._lsib = undefined\n        //更新child\n        child._rsib = old_fstch._id\n        //\n        //child 不是lstch _parent 置为 未计算\n        child._parent = undefined\n        //不改动fstch\n    }\n    nd._fstch = child._id\n    nodes[child._id] = child\n    //返回当前节点\n    return(nd)\n}\n\n\nfunction append_child(nd,child,nodes) {\n    if(is_connectable(child)) {} else { console.log('only root or uninited could be append');return(nd)}\n    //\n    let cond = is_leaf(nd)\n    child._tree = nd._tree\n    child._rsib = null\n    if(cond){\n        //child 也是lstch\n        nd._fstch = child._id\n        child._lsib = null\n    } else {\n        //变更old_lstch\n        let old_lstch = get_lstch(nd,nodes)\n        //old_lstch 不再是lstch\n        old_lstch._parent = undefined\n        old_lstch._rsib = child._id\n        //child 不是fstch _lsib置为 undefined\n        child._lsib = undefined\n    }\n    child._parent = nd._id\n    nodes[child._id] = child\n    return(nd)\n}\n\nfunction add_rsib(nd,rsib,nodes) {\n    if(is_connectable(rsib)) {} else { console.log('only root or uninited could be add');return(nd)}\n    //root 不可操作\n    if(is_root(nd)) {\n        console.log(\"cant addrsib to root\")\n        return(nd)\n    }\n    //\n    let cond = is_lstch(nd)\n    rsib._tree = nd._tree\n    if(cond) {\n        rsib._parent = nd._parent\n        nd._parent = undefined\n        rsib._rsib = null\n    } else {\n        rsib._rsib = nd._rsib\n        rsib._parent = undefined\n    }\n    nd._rsib = rsib._id\n    //rsib 一定不是fstch\n    rsib._lsib = undefined\n    //\n    nodes[rsib._id] = rsib\n    return(nd)\n}\n\nfunction add_lsib(nd,lsib,nodes) {\n    //\n    if(is_connectable(lsib)) {} else { console.log('only root or uninited could be add');return(nd)}\n    //root 不可操作\n    if(is_root(nd)) {\n        console.log(\"cant addlsib to root\")\n        return(nd)\n    }\n    //\n    let cond = is_fstch(nd)\n    lsib._tree = nd._tree\n    if(cond) {\n        let parent = get_parent(nd,nodes)\n        nd._lsib = undefined\n        lsib._lsib = null\n        parent._fstch = lsib._id\n    } else {\n        let old_lsib = get_lsib(nd,nodes)\n        old_lsib._rsib = lsib._id\n        //\n        lsib._lsib = undefined\n    }\n    lsib._rsib = nd._id\n    //lsib 一定不是lstch\n    lsib._parent = undefined\n    //\n    nodes[lsib._id] = lsib\n    return(nd)\n}\n\nfunction insert_child(which,nd,child,nodes) {\n    let children = get_children(nd,nodes)\n    let lngth = children.length\n    if(lngth ===0) {\n        return(prepend_child(nd,child,nodes))\n    } else {\n        let cond = (which<=lngth) && (which >=0)\n        if(!cond) {\n            console.log(\"not in range!!\")\n            return(nd)\n        } else {\n            if(which === 0) {\n                return(prepend_child(nd,child,nodes))\n            } else if(which === lngth) {\n                return(append_child(nd,child,nodes))\n            } else {\n                let lnd = children[which-1]\n                return(add_rsib(lnd,child,nodes))\n            }\n        }\n    }\n}\n\n\nfunction update_treeid(nd,cnodes) {\n    for(let id in cnodes) {\n        cnodes[id]._tree = nd._tree\n    }\n}\n\n\n/*tree*/\n\nfunction prepend_child_tree(nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = prepend_child(nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\nfunction append_child_tree(nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = append_child(nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\nfunction add_rsib_tree(nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = add_rsib(nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\nfunction add_lsib_tree(nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = add_lsib(nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\nfunction insert_child_tree(which,nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = insert_child(which,nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\n\n/*tree*/\n\nfunction update_disconnected_nodes(nd,nodes) {\n    let nsdfs = get_sdfs(nd,nodes)\n    let treeid = nsdfs[0]._id\n    nsdfs.forEach(\n       nd=> {\n           nd._tree =treeid \n       }\n    ) \n    return(nsdfs)\n}\n\nfunction update_orig_nodes(nsdfs,nodes) {\n    let nnodes = {}\n    nsdfs.map(\n        nd => {\n            let id = nd._id\n            nnodes[id] = nd\n            delete nodes[id]\n        }\n    )\n    return(nnodes)  \n}\n\n\nfunction leafize(nd) {\n    nd._fstch = null\n    //nd._lsib = null\n    //nd._rsib = null\n    return(nd)\n}\n\nfunction rootize(nd) {\n    nd._lsib = null\n    nd._rsib = null\n    nd._parent = null\n    return(nd) \n}\n\n\nfunction disconnect(nd,nodes) {\n    let cond = is_root(nd)\n    if(cond) {\n        //do nothing\n        return([nd,nodes])\n    } else if(is_lonely(nd,nodes)) {\n        //\n        let parent =  nodes[nd._parent]\n        leafize(parent);\n        let nsdfs = update_disconnected_nodes(nd,nodes);\n        let nnodes = update_orig_nodes(nsdfs,nodes)\n        rootize(nd);\n        //\n        return([nd,nnodes])         \n    } else {\n        if(is_fstch(nd)) {\n            //节点变味新树的根节点\n            let rsib = get_rsib(nd,nodes)\n            //右兄弟变成了fstch, lsib 指向null\n            rsib._lsib = null\n            //右兄弟变成了fstch,parent要指向rsib\n            //rsib._parent = nd._parent fstch的parent不需要改变\n            // parent 的fstch 要指向rsib\n            let parent = get_parent(nd,nodes) \n            parent._fstch = nd._rsib  \n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = update_disconnected_nodes(nd,nodes)\n            //从原来的nodes删除分离出的子树的所有节点\n            let nnodes = update_orig_nodes(nsdfs,nodes)\n            //nd 变为分离出去的tree的root\n            rootize(nd);\n            //\n            return([nd,nnodes])             \n        } else if(is_lstch(nd)) {\n            //节点变味新树的根节点\n            let lsib = get_lsib(nd,nodes) \n            lsib._rsib = nd._rsib\n            //左兄弟变成了lstch,左邻居要指向parent\n            lsib._parent = nd._parent\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = update_disconnected_nodes(nd,nodes) \n            //从原来的nodes删除分离出的子树的所有节点\n            let nnodes = update_orig_nodes(nsdfs,nodes)\n            //nd 变为分离出去的tree的root\n            rootize(nd);\n            //\n            return([nd,nnodes])\n        } else {\n            //节点变味新树的根节点\n            let lsib = get_lsib(nd,nodes) \n            lsib._rsib = nd._rsib\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = update_disconnected_nodes(nd,nodes)\n            //从原来的nodes删除分离出的子树的所有节点\n            let nnodes = update_orig_nodes(nsdfs,nodes)\n            //nd 变为分离出去的tree的root\n            rootize(nd);\n            //\n            return([nd,nnodes])\n        }\n    }   \n}\n\n//在父节点上操作\nfunction rm_fstch(nd,nodes) {\n    let fstch = get_fstch(nd,nodes)\n    if(fstch===null) {\n        return([nd,nodes])\n    } else {\n        return(disconnect(fstch,nodes))\n    }\n}\n\nfunction rm_lstch(nd,nodes) {\n    let lstch = get_lstch(nd,nodes)\n    if(lstch===null) {\n        return([nd,nodes])\n    } else {\n        return(disconnect(lstch,nodes))\n    }\n}\n\nfunction rm_which(index,nd,nodes) {\n    let child = get_which_child(index,nd,nodes)\n    if(child===null) {\n        return([nd,nodes])\n    } else {\n        return(disconnect(child,nodes))\n    }     \n}\n\nfunction rm_some(nd,nodes,...whices) {\n    let some = get_some_children(nd,nodes,...whiches) \n    for(let i=0;i<some.length;i++) {\n        disconnect(some[i],nodes)\n    }\n    return([nd,nodes])\n}\n\nfunction rm_all(nd,nodes) {\n    let children = get_children(nd,nodes)\n    for(let i=0;i<children.length;i++) {\n        disconnect(children[i],nodes)\n    }\n    return(nodes)\n}\n\n/**/\n\n//child\n\nfunction get_fstch(nd,nodes) {\n    let fstch = (nd._fstch===null)?null:nodes[nd._fstch]\n    return(fstch)\n}\n\n\nfunction get_children(nd,nodes){\n    let children = []\n    let child = get_fstch(nd,nodes)\n    while(child!==null){\n        children.push(child)\n        child = get_rsib(child,nodes)\n    }\n    return(children)\n}\n\nfunction get_lstch(nd,nodes) {\n    let children = get_children(nd,nodes)\n    if(children.length ===0){\n        return(null)\n    } else {\n        return(children[children.length-1])\n    }\n}\n\nfunction get_which_child(which,nd,nodes) {\n    let children = get_children(nd,nodes)\n    if(children.length ===0){\n        return(null)\n    } else {\n        let cond = (which>children.length-1) || (which <0)\n        if(cond){\n            return(null)\n        } else {\n            return(children[which])\n        }\n    }\n}\n\nfunction get_some_children(nd,nodes,...whiches) {\n    let children = get_children(nd,nodes)\n    let some = []\n    if(children.length ===0) {\n        \n    } else {\n        for(let i=0;i<whiches.length;i++) {\n            let which = whiches[i]\n            let cond = (which>children.length-1) || (which <0)\n            if(cond) {\n                \n            } else {\n                some.push(children[which])\n            }\n        }\n    }\n    return(some)\n}\n\n\n////sibs\nfunction get_lstsib(nd,nodes,including_self=false) {\n    let lstrsib = nd\n    let rsib = get_rsib(nd,nodes)\n    while(rsib!==null) {\n        lstrsib = rsib\n        rsib = get_rsib(rsib,nodes)\n    }\n    if(including_self){\n        return(lstrsib)\n    } else {\n        if(lstrsib._id !== nd._id) {\n            return(lstrsib)\n        } else {\n            return(null)\n        }\n    }\n}\n\n\nfunction get_preceding_sibs(nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let seq = cmmn.dtb_kv_get_seq(\"_id\",nd._id,sibs)\n    let some = []\n    if(sibs.length ===0) {\n        \n    } else {\n        for(let i=0;i<sibs.length;i++) {\n            let cond = i<seq\n            if(cond) {\n                some.push(sibs[i])\n            }\n        }\n    }\n    return(some)\n}\n\nfunction get_following_sibs(nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let seq = cmmn.dtb_kv_get_seq(\"_id\",nd._id,sibs)\n    let some = []\n    if(sibs.length ===0) {\n        \n    } else {\n        for(let i=0;i<sibs.length;i++) {\n            let cond = i>seq\n            if(cond) {\n                some.push(sibs[i])\n            }\n        }\n    }\n    return(some)\n}\n\nfunction get_sibs(nd,nodes,including_self=false) {\n    let parent = get_parent(nd,nodes)\n    let sibs;\n    if(parent !== null) { \n        sibs = get_children(parent,nodes)\n    } else {\n        sibs =[nd]\n    }\n    if(including_self) {\n        return(sibs)\n    } else {\n        sibs = cmmn.dtb_kv_rm('_id',nd._id,sibs)\n    }\n    return(sibs)\n}\n\nfunction get_fstsib(nd,nodes,including_self=false) {\n    let sibs = get_sibs(nd,nodes,true)\n    if(including_self) {\n        return(sibs[0])\n    } else {\n        if(sibs[0]._id === nd._id) {\n            return(null)\n        } else {\n            return(sibs[0])\n        }\n    }\n}\n\n\nfunction get_which_sib(which,nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let lngth = sibs.length\n    let cond = (which<=lngth-1) && (which >=0)\n    if(cond) {\n        return(sibs[which])\n    } else {\n        return(null)\n    }\n}\n\nfunction get_some_sibs(nd,nodes,...whiches) {\n    let sibs = get_sibs(nd,nodes,true)\n    let some = []\n    if(sibs.length ===0) {\n        \n    } else {\n        for(let i=0;i<whiches.length;i++) {\n            let which = whiches[i]\n            let cond = (which>sibs.length-1) || (which <0)\n            if(cond) {\n                \n            } else {\n                some.push(sibs[which])\n            }\n        }\n    }\n    return(some)\n}\n\nfunction get_sibseq(nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let seq = cmmn.dtb_kv_get_seq(\"_id\",nd._id,sibs)\n    return(seq)\n}\n\nfunction get_lsib(nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let seq = cmmn.dtb_kv_get_seq(\"_id\",nd._id,sibs)\n    if(seq === 0) {\n        return(null)\n    } else {\n        return(sibs[seq-1])\n    }\n}\n\nfunction get_rsib(nd,nodes) {\n    let rsib = (nd._rsib===null)?null:nodes[nd._rsib]\n    return(rsib)\n}\n\n//layer\n\nfunction get_depth(nd,nodes) {\n    let ances = get_ances(nd,nodes,true)\n    return(ances.length-1)\n}\n\nfunction get_height(nd,nodes) {\n    let depth = get_depth(nd,nodes)\n    let sdfs = get_sdfs(nd,nodes)\n    let des_depths = sdfs.map(r=>get_depth(r,nodes))\n    let max = Math.max(...des_depths)\n    return(max-depth+1)\n}\n\nfunction get_fst_lyr_des_depth(nd,nodes) {\n    let cond = is_leaf(nd)\n    if(cond) {\n        return(null)\n    } else {\n        let depth = get_depth(nd,nodes)\n        return(depth+1)\n    }\n}\n\nfunction get_lst_lyr_des_depth(nd,nodes) {\n    let cond = is_leaf(nd)\n    if(cond) {\n        return(null)\n    } else {\n        let depth = get_depth(nd,nodes)\n        let sdfs = get_sdfs(nd,nodes)\n        let des_depths = sdfs.map(r=>get_depth(r,nodes))\n        let max = Math.max(...des_depths)\n        return(max)\n    }\n}\n\nfunction get_which_lyr_des_depth(which,nd,nodes) {\n    let depth = get_depth(nd,nodes)\n    let height = get_height(nd,nodes)\n    if(height<=which){\n        return(null)\n    } else {\n        return(depth+which)\n    }\n}\n\n\nfunction get_lyr(nd,nodes) {\n    let root = get_root(nd,nodes)\n    let sdfs = get_sdfs(root,nodes)\n    let depth = get_depth(nd,nodes)\n    let lyr = sdfs.filter(nd=>(get_depth(nd,nodes) === depth))\n    return(lyr) \n}\n\nfunction get_breadth(nd,nodes) {\n    let lyr = get_lyr(nd,nodes)\n    let breadth = cmmn.dtb_kv_get_seq('_id',nd._id,lyr)\n    return(breadth)\n}\n\n\nfunction get_count(nd,nodes) {\n    let sdfs = get_sdfs(nd,nodes)\n    return(sdfs.length)\n}\n\n//ance\nfunction get_root(nd,nodes) {\n    /*\n        get_root(root,nodes)\n        get_root(child,nodes)\n    */\n    let lst_parent = nd\n    let parent = get_parent(nd,nodes)  \n    while(parent !== null) {\n        lst_parent = parent\n        parent = get_parent(parent,nodes)\n    }\n    return(lst_parent)\n}\n\nfunction get_parent(nd,nodes) {\n    let parent;\n    if(is_root(nd)) {\n        parent = null\n    } else {\n        let lstrsib = get_lstsib(nd,nodes,true)\n        parent = nodes[lstrsib._parent]\n    }\n    return(parent)\n}\n\nfunction get_ances(nd,nodes,including_self=false) {\n    let ances = []\n    let parent = get_parent(nd,nodes)  \n    while(parent !== null) {\n        ances.push(parent)\n        parent = get_parent(parent,nodes)\n    }\n    if(including_self){\n        ances.unshift(nd)\n    } else {\n        \n    }\n    return(ances)\n}\n\nfunction get_which_ance(which,nd,nodes) {\n    let ances = get_ances(nd,nodes,true)\n    let lngth = ances.length\n    let cond = (which<lngth) && (which>=0)\n    if(cond) {\n        return(ances[which])\n    } else {\n        return(null)\n    }\n}\n\nfunction get_some_ances(nd,nodes,...whiches) {\n    let ances = get_ances(nd,nodes,true)\n    let some = []\n    if(ances.length ===0) {\n        \n    } else {\n        for(let i=0;i<whiches.length;i++) {\n            let which = whiches[i]\n            let cond = (which>ances.length-1) || (which <0)\n            if(cond) {\n                \n            } else {\n                some.push(ances[which])\n            }\n        }\n    }\n    return(some)\n}\n\n\n\n//sdfs  depth-first  record-when-open-tag\n\nfunction get_rsib_of_fst_ance_having_rsib(nd,nodes) {\n    /*\n        along the parent chain until root,not_including_self\n        if the parent have rsib,return the rsib-of-parent\n        ---------\n    */\n    let parent = get_parent(nd,nodes)\n    while(parent!==null) {\n        let rsib = get_rsib(parent,nodes)\n        if(rsib!==null) {\n            return(rsib)\n        } else {\n            parent = get_parent(parent,nodes)\n        }\n    }\n    return(null)\n}\n\n\nfunction get_sdfs_next(nd,nodes) {\n    /*\n        如果有child, 返回first-child\n            如果有rsib,返回rsib\n                沿着祖先链往上,找到第一个有rsib的ance,返回这个ance的rsib\n        如果返回null,表明当前节点是sdfs数组的最后一个节点\n    */\n    let fstch = get_fstch(nd,nodes)\n    if(fstch !== null) {\n        return(fstch)\n    } else {\n        let rsib = get_rsib(nd,nodes)\n        if(rsib !== null) {\n            return(rsib)\n        } else {\n            return(get_rsib_of_fst_ance_having_rsib(nd,nodes))\n        }\n    }\n}\n\nfunction get_drmost_des(nd,nodes){\n    /*\n       down-most  and right-most of subtree\n       including_self\n    */\n    let old_lstch = nd\n    let lstch = get_lstch(nd,nodes)\n    while(lstch !== null) {\n        old_lstch = lstch\n        lstch = get_lstch(lstch,nodes)\n    }\n    return(old_lstch)\n}\n\nfunction get_sdfs_prev(nd,nodes) {\n    /*\n        如果是root ,返回null 因为root 是起始点\n        如果是叶子节点\n            如果有lsib,返回lsib\n            如果没有lsib,返回parent(没有lsib 说明这个节点是first-child)\n        如果不是叶子节点\n             如果有左邻居\n                 lsib是leaf,返回lsib\n                 lsib不是leaf,返回drmost-of-lsib \n             如果没有lsib,返回parent\n    */ \n    if(is_root(nd)) {\n        return(null)\n    }\n    let cond = is_leaf(nd)\n    if(cond) {\n        let lsib = get_lsib(nd,nodes)\n        if(lsib !== null) {\n            return(lsib)\n        } else {\n            let parent = get_parent(nd,nodes)\n            return(parent)\n        }\n    } else {\n        let lsib = get_lsib(nd,nodes)\n        if(lsib !== null) {\n            let cond = is_leaf(lsib)\n            if(cond) {\n                return(lsib)\n            } else {\n                return(get_drmost_des(lsib,nodes))\n            }\n        } else {\n            let parent = get_parent(nd,nodes)\n            return(parent)\n        }\n    }\n}\n\n\nfunction get_sdfs(nd,nodes) {\n    let nd_depth = get_depth(nd,nodes)\n    let sdfs =[]\n    while(nd!==null) {\n        sdfs.push(nd)\n        nd = get_sdfs_next(nd,nodes)\n        if(nd!==null) {\n            let depth = get_depth(nd,nodes)\n            if(depth<=nd_depth) {\n                break\n            }\n        }\n    }\n    return(sdfs)\n}\n\n//edfs\n\n\nfunction get_dlmost_des(nd,nodes) {\n    /*\n        including_self\n    */\n    let old_fstch = nd\n    let fstch = get_fstch(nd,nodes)\n    while(fstch !== null) {\n        old_fstch = fstch\n        fstch = get_fstch(fstch,nodes)\n    }\n    return(old_fstch)\n}\n\nfunction get_edfs_next(nd,nodes) {\n    let rsib = get_rsib(nd,nodes)\n    if(rsib === null) {\n        //如果没有右兄弟，说明节点是lstch,此时应该返回父节点\n        let p = get_parent(nd,nodes)\n        return(p)\n    } else {\n       //如果有右兄弟，返回down-left-most-of-rsib\n       return(get_dlmost_des(rsib,nodes))\n    }\n}\n\nfunction get_lsib_of_fst_ance_having_lsib(nd,nodes) {\n    /*\n        along the parent chain until root,not_including_self\n        if the parent have lsib,return the lsib-of-parent\n        ---------\n    */\n    let parent = get_parent(nd,nodes)\n    while(parent!==null) {\n        let lsib = get_lsib(parent,nodes)\n        if(lsib!==null) {\n            return(lsib)\n        } else {\n            parent = get_parent(parent,nodes)\n        }\n    }\n    return(null)\n}\n\n\n\nfunction get_edfs_prev(nd,nodes) {\n    let cond = is_leaf(nd)\n    if(!cond) {\n        return(get_lstch(nd,nodes))\n    } else {\n       let lsib = get_lsib(nd,nodes)\n       if(lsib === null) {\n           return(get_lsib_of_fst_ance_having_lsib(nd,nodes))\n       } else {\n           return(lsib)\n       }\n    }    \n}\n\n\nfunction get_edfs(nd,nodes) {\n    let edfs = []\n    let nxt = get_dlmost_des(nd,nodes)\n    while(nxt !== null ) {\n        edfs.push(nxt)\n        if(nxt._id === nd._id) {\n            break;\n        } else {\n            nxt = get_edfs_next(nxt,nodes)\n        }\n    }\n    return(edfs)\n}\n\n//sedfs\n\nfunction clear_$visited(nodes) {\n    cmmn.dict_foreach(nodes,(k,v)=>{nodes[k]._$visited = false})    \n}\n\nfunction get_sedfs_next(nd,nodes) {\n    let visited = nd._$visited\n    let cond = is_leaf(nd)\n    if(cond) {\n        if(visited) {\n            let rsib = get_rsib(nd,nodes)\n            if(rsib === null) {\n                return(get_parent(nd,nodes))  \n            } else {\n                return(rsib)\n            } \n        } else {\n            nd._$visited = true\n            return(nd)\n        }\n    } else {\n        if(visited) {\n            let rsib = get_rsib(nd,nodes)\n            if(rsib === null) {\n                return(get_parent(nd,nodes)) \n            } else {\n                return(rsib)\n            } \n        } else {\n            nd._$visited = true\n            return(get_fstch(nd,nodes))    \n        }\n    }    \n}\n\n\nfunction get_sedfs_prev(visited,nd,nodes) {\n    let cond = is_leaf(nd)\n    if(cond) {\n        if(visited) {\n            return(nd)\n        } else {\n            let lsib = get_lsib(nd,nodes)\n            if(lsib === null) {\n                return(get_parent(nd,nodes))\n            } else {\n                return(lsib)\n            }\n        }\n    } else {\n        if(visited) {\n            return(get_lstch(nd,nodes))\n        } else {\n            let lsib = get_lsib(nd,nodes)\n            if(lsib === null) {\n                return(get_parent(nd,nodes))\n            } else {\n                return(lsib)\n            }\n        }\n    }\n}\n\nfunction is_sedfs_traverse_finished(start_id,nd) {\n    let cond = (nd._$visited) && (start_id === nd._id)\n    return(cond)\n}\n\nfunction get_sedfs(nd,nodes,deepcopy=false,clear=true) {\n    let sedfs = []\n    clear_$visited(nodes)   \n    let start_id = nd._id\n    while(!is_sedfs_traverse_finished(start_id,nd)) {\n        deepcopy? sedfs.push(cmmn.dcp(nd)):sedfs.push(nd)\n        nd = get_sedfs_next(nd,nodes)\n    }\n    deepcopy?sedfs.push(cmmn.dcp(nd)):sedfs.push(nd)\n    if(clear){\n        clear_$visited(nodes)\n    }\n    return(sedfs)\n}\n\n//\n\nfunction nd2ele(nd,nodes) {\n    let ele = {}\n    ele._depth = get_depth(nd,nodes)\n    ele._breadth = get_breadth(nd,nodes) \n    let p = get_parent(nd,nodes)\n    ele._pbreadth = (p===null)? null : get_breadth(p,nodes) \n    ele._id = nd._id\n    return(ele)\n}\n\n\n\n\nfunction _nd2unhandled_ele(nd) {\n    let o = {}\n    o.ele = {}\n    o.nd = nd\n    o.ele._id = nd._id\n    o.ele._children = []\n    return(o) \n}\n\nfunction sdfs2mat(sdfs,nodes) {\n    let m = []\n    let nd = sdfs[0]\n    let unhandled = [_nd2unhandled_ele(nd)]\n    unhandled[0].ele._pbreadth = null\n    while(unhandled.length>0){\n        let next_unhandled = []\n        for(let i=0;i<unhandled.length;i++) {\n            unhandled[i].ele._breadth = i\n            unhandled[i].ele._depth = m.length\n            let children = get_children(unhandled[i].nd,nodes)\n            children = children.map(nd=>_nd2unhandled_ele(nd))\n            children.forEach(\n                (r,index)=>{\n                    r.ele._pbreadth = unhandled[i].ele._breadth\n                    unhandled[i].ele._children.push([(m.length+1),next_unhandled.length+index])\n                }\n            )\n            next_unhandled = next_unhandled.concat(children)\n        }\n        let lyr = unhandled.map(r=>r.ele)\n        m.push(lyr)\n        unhandled = next_unhandled\n    }   \n    return(m)        \n}\n\nfunction sdfs2edfs(sdfs,nodes) {\n    return(get_edfs(sdfs[0],nodes))\n}\n\nfunction sdfs2sedfs(sdfs,nodes,deepcopy=false,clear=true) {\n    return(get_sedfs(sdfs[0],nodes,deepcopy,clear))\n}\n\nfunction edfs2mat(edfs,nodes) {\n    let sdfs = edfs2sdfs(edfs,nodes)\n    let m = sdfs2mat(sdfs,nodes)\n    return(m)\n}\n\nfunction edfs2sdfs(edfs,nodes) {\n    let nd = edfs[edfs.length-1]\n    return(get_sdfs(nd,nodes))\n}\n\nfunction edfs2sedfs(edfs,nodes,deepcopy=false,clear=true) {\n    let sdfs = edfs2sdfs(edfs,nodes)\n    return(sdfs2sedfs(sdfs,nodes,deepcopy,clear)) \n}\n\nfunction sedfs2mat(sedfs,nodes) {\n    let sdfs = sedfs2sdfs(sedfs,nodes)\n    return(sdfs2mat(sdfs,nodes))\n}        \n\nfunction sedfs2sdfs(sedfs,nodes) {\n    let nd = sedfs[0]\n    return(get_sdfs(nd,nodes))\n}        \n\nfunction sedfs2edfs(sedfs,nodes) {\n    let sdfs = sedfs2sdfs(sedfs,nodes)\n    return(sdfs2edfs(sdfs,nodes))\n}\n\n\n//\n\nfunction get_deses(nd,nodes,including_self=false) {\n    let deses = get_sdfs(nd,nodes)\n    if(including_self) {\n    } else {\n        deses.splice(0,1)\n    }\n    return(deses)\n}\n\nfunction get_fst_lyr_deses(nd,nodes) {\n    return(get_children(nd,nodes))\n}\n\nfunction get_lst_lyr_deses(nd,nodes) {\n    let deses = get_deses(nd,nodes,false)\n    let des_depths = sdfs.map(r=>get_depth(r,nodes))\n    let max = Math.max(...des_depths)\n    deses = deses.filter(r=>(get_depth(r,nodes)===max))\n    return(deses)\n}\n\nfunction get_which_lyr_deses(which,nd,nodes) {\n    let depth = get_depth(nd,nodes)\n    let deses = get_deses(nd,nodes,false)\n    let des_depths = sdfs.map(r=>get_depth(r,nodes))\n    deses = deses.filter(r=>(get_depth(r,nodes)===(depth+which)))\n    return(deses)\n}\n\nfunction get_some_lyrs_deses(nd,nodes,...whiches) {\n    let deses = whiches.map(which => get_which_lyr_deses(which,nd,nodes))\n    deses = Array.prototype.concat(...deses)\n    return(deses)\n}\n\n\n//\nfunction get_root_via_tree(tree) {\n    let k = cmmn.dict_keys(tree)[0]\n    let nd = tree[k]\n    let root = get_root(nd,tree)\n    return(root)\n}\n\nfunction tree2sdfs(tree) {\n    let root = get_root_via_tree(tree)\n    let sdfs = get_sdfs(root,tree) \n    return(sdfs)\n}\n\n\n\nmodule.exports = {\n    //\n    calc_next_id,\n    update_nodes_ids,\n    //creat\n    creat_root:creat_root,\n    creat_nd:creat_nd,\n    //is\n    is_inited:is_inited,\n    is_root:is_root,\n    is_fstch:is_fstch,\n    is_lstch:is_lstch,\n    is_leaf:is_leaf,\n    is_lonely:is_lonely,\n    is_id:is_id,\n    is_connectable:is_connectable,\n    //insert \n    prepend_child:prepend_child,\n    append_child:append_child,\n    insert_child:insert_child,\n    add_rsib:add_rsib,\n    add_lsib:add_lsib,\n    //child\n    get_fstch:get_fstch,\n    get_rsib:get_rsib,\n    get_children:get_children,\n    get_lstch:get_lstch,\n    get_which_child:get_which_child,\n    get_some_children:get_some_children,\n    //sib\n    get_fstsib:get_fstsib,\n    get_lstsib:get_lstsib,\n    get_preceding_sibs:get_preceding_sibs,\n    get_following_sibs:get_following_sibs,\n    get_sibs:get_sibs,\n    get_which_sib:get_which_sib,\n    get_some_sibs:get_some_sibs,\n    get_sibseq:get_sibseq,\n    get_lsib:get_lsib,\n    get_rsib:get_rsib,\n    //mat\n    get_lyr:get_lyr,\n    get_breadth:get_breadth,\n    get_count:get_count,\n    get_depth:get_depth,\n    get_height:get_height,\n    get_fst_lyr_des_depth:get_fst_lyr_des_depth,\n    get_lst_lyr_des_depth:get_lst_lyr_des_depth,\n    get_which_lyr_des_depth:get_which_lyr_des_depth,\n    //ance\n    get_root:get_root,\n    get_parent:get_parent,\n    get_ances:get_ances,\n    get_which_ance:get_which_ance,\n    get_some_ances:get_some_ances,\n    //sdfs\n    get_rsib_of_fst_ance_having_rsib:get_rsib_of_fst_ance_having_rsib,\n    get_sdfs_next:get_sdfs_next,\n    get_drmost_des:get_drmost_des,\n    get_sdfs_prev:get_sdfs_prev,\n    get_sdfs:get_sdfs,\n    //edfs\n    get_lsib_of_fst_ance_having_lsib:get_lsib_of_fst_ance_having_lsib,\n    get_dlmost_des:get_dlmost_des,\n    get_edfs_next:get_edfs_next,\n    get_edfs_prev:get_edfs_prev,\n    get_edfs:get_edfs,\n    //sedfs\n    clear_$visited:clear_$visited,\n    get_sedfs_next:get_sedfs_next,\n    is_sedfs_traverse_finished:is_sedfs_traverse_finished,\n    get_sedfs_prev:get_sedfs_prev,    \n    get_sedfs:get_sedfs,\n    //des\n    get_deses:get_deses,\n    get_fst_lyr_deses:get_fst_lyr_deses,\n    get_lst_lyr_deses:get_lst_lyr_deses,\n    get_which_lyr_deses:get_which_lyr_deses,\n    get_some_lyrs_deses:get_some_lyrs_deses,\n    //mat\n    nd2ele:nd2ele,\n    sdfs2mat:sdfs2mat,\n    //\n    sdfs2edfs:sdfs2edfs,\n    sdfs2sedfs:sdfs2sedfs,\n    edfs2mat:edfs2mat,\n    edfs2sdfs:edfs2sdfs,\n    edfs2sedfs:edfs2sedfs,\n    sedfs2mat:sedfs2mat,\n    sedfs2sdfs:sedfs2sdfs,\n    sedfs2edfs:sedfs2edfs,\n    //\n    update_disconnected_nodes,\n    update_orig_nodes,\n    leafize,\n    rootize,\n    disconnect,\n    rm_fstch,\n    rm_lstch,\n    rm_which,\n    rm_some,\n    rm_all,\n    //\n    update_treeid,\n    update_one_nodeid,\n    update_nodes_ids,\n    prepend_child_tree,\n    append_child_tree,\n    add_rsib_tree,\n    add_lsib_tree,\n    insert_child_tree,\n    //\n    get_root_via_tree,\n    tree2sdfs,\n}\n\n\n","\nfunction rjson(fn) {\n    let cond = globalThis.document;\n    if(cond === undefined) {\n        let fs = globalThis.require('fs')\n        let buf = fs.readFileSync(fn)\n        let s = buf.toString()\n        let d = JSON.parse(s)\n        return(d)\n    } else {\n        return(undefined)\n    }\n}\n\nfunction wjson(fn,js) {\n    let cond = globalThis.document;\n    if(cond === undefined){\n        let fs = globalThis.require('fs')\n        let s =JSON.stringify(js)\n        fs.writeFileSync(fn,s)\n    } else {\n        return(undefined)\n    }\n}\n\n\nfunction is_int_str(s) {\n    let n = parseInt(s)\n    let ns = n.toString()\n    return(ns === s)\n}\n\n\nmodule.exports = {\n    rjson,\n    wjson,\n    is_int_str,\n}\n","const ndcls = require('./ndcls.js')\nconst ndfunc = require('./ndfunc.js')\nconst ndfuncterm = require('./ndfuncterm.js')\nconst ndutil = require('./util.js')\n\nmodule.exports = {\n    ndfunc:ndfunc,\n    ndfuncterm:ndfuncterm,\n    ndcls:ndcls,\n    ndutil:ndutil,\n}\n","const ndutil = require('./util.js')\nconst cmmn = require('./cmmn.js')\nconst ndfunc = require('./ndfunc.js')\nconst EventTarget = require('./event-target.js').EventTarget\nconst STRUCT_KEYS = ['_fstch','_lsib','_rsib','_parent','_tree']\n\n\nfunction _is_inited(nd) {\n    //被添加到了树上\n    let cond = (nd._tree !== undefined)\n    return(cond)\n}\n\nfunction _is_root(nd) {\n    //根节点的_tree 指向自己\n    let cond = (nd._tree === nd)\n    return(cond)\n}\n\nfunction _is_fstch(nd) {\n    //没有左兄弟\n    let cond = (nd._lsib === null)\n    return(cond)\n}\n\nfunction _is_lstch(nd) {\n    //没有右兄弟\n    let cond = (nd._rsib === null)\n    return(cond)\n}\n\n\nfunction _is_leaf(nd) {\n    //没有子\n    let cond = (nd._fstch === null)\n    return(cond)\n}\n\n\nfunction _is_lonely(nd) {\n    let sibs = nd.$sibs(true)\n    return(sibs.length === 1)\n}\n\n\nfunction _is_connectable(nd) {\n    return(_is_root(nd) || !_is_inited(nd))\n}\n\n\n\n/* child query*/\n\n//_fstch is always directly\n\nfunction _lstch(nd) {\n    let child = nd._fstch\n    let oldch = child\n    while(child!==null) {\n        oldch = child\n        child = child._rsib\n    }\n    return(oldch)\n}\n\nfunction _which_child(index,nd) {\n    let c = 0\n    let child = nd._fstch\n    while(true) {\n        if(c === index) {\n            return(child)\n        } else {\n            if(child === null) {\n                return(child)\n            } else {\n            }\n        }\n        child = child._rsib\n        c = c + 1\n    }\n}\n\nfunction _some_children(nd,...whiches) {\n    let children = []\n    let c = 0\n    let child = nd._fstch\n    while(true) {\n        if(whiches.includes(c)) {\n            children.push(child)\n        } else {\n            if(child === null) {\n                return(children)\n            } else {\n            }\n        }\n        child = child._rsib \n        c = c + 1\n    }\n}\n\nfunction _children(nd) {\n    let children = []\n    let c = 0\n    let child = nd._fstch\n    while(true) {\n        if(child === null) {\n            return(children)\n        } else {\n            children.push(child)\n        }\n        child = child._rsib\n        c = c + 1\n    }\n}\n\n\nfunction _children_count(nd) {\n    let c = 0\n    let child = nd._fstch\n    while(true) {\n        if(child === null) {\n            return(c)\n        } else {\n        }\n        child = child._rsib\n        c = c + 1\n    }\n}\n\n\n/*sib*/\n\n//_rsib is always directly \n\nfunction _lstsib(nd,including_self=false) {\n    let rsib = nd._rsib\n    let oldrsib = nd\n    while(rsib !== null) {\n        oldrsib = rsib\n        rsib = rsib._rsib \n    }  \n    if(including_self){\n        return(oldrsib)\n    } else {\n        if(oldrsib !== nd) {\n            return(oldrsib)\n        } else {\n            return(null)\n        }\n    }    \n}\n\n\n\nfunction _fstsib(nd,including_self=false) {\n    let p = _parent(nd)\n    if(p === null) {\n        return((including_self)?nd:null)\n    } else {\n        let fstsib = p._fstch\n        if(including_self) {\n            return(fstsib)        \n        } else {\n            if(fstsib !== nd) {\n                return(fstsib)\n            } else {\n                return(null)\n            }\n        }\n    }\n}\n\n\nfunction _lsib(nd) {\n    let fstsib = _fstsib(nd,false)\n    if(fstsib === null) {\n        return(null)\n    } else {\n        let sib = fstsib\n        while(true) {\n            if(sib._rsib === nd) {\n                return(sib)\n            } else {\n            }\n            sib = sib._rsib\n        }\n    }\n}\n\n\nfunction _psibs(nd) {\n    let psibs = []\n    let fstsib = _fstsib(nd,true)\n    let sib = fstsib\n    while(sib !== null) {\n        if(sib === nd) {\n            return(psibs)           \n        } else {\n            psibs.push(sib)\n        }\n        sib = sib._rsib\n    }\n}\n\n\nfunction _fsibs(nd) {\n    let fsibs = []\n    let rsib = nd._rsib\n    while(rsib !== null) {\n        fsibs.push(rsib)\n        rsib = rsib._rsib\n    }\n    return(fsibs)\n}\n\nfunction _sibs(nd,including_self=false) {\n    let psibs = _psibs(nd)\n    let fsibs = _fsibs(nd)\n    let me = [nd]\n    if(including_self) {\n        sibs = psibs.concat(me,fsibs)\n    } else {\n        sibs = psibs.concat(fsibs)\n    }\n    return(sibs)\n}\n\n\nfunction _which_sib(index,nd) {\n    let sib = _fstsib(nd,true)\n    let c = 0\n    while(true) {\n        if(sib === null) {\n            return(null)\n        } else {\n            if(c==index) {\n                return(sib)\n            }\n        }\n        sib = sib._rsib\n        c = c + 1\n    }    \n}\n\nfunction _some_sibs(nd,...indexes) {\n    let sibs = _sibs(nd,true) \n    let some = sibs.filter(\n        (r,i) => indexes.includes(i) \n    )\n    return(some)   \n}\n\n\nfunction _sibseq(nd) {\n    let psibs = _psibs(nd)\n    return(psibs.length)\n}\n\n\nfunction _sibs_count(nd,including_self=false) {\n    let sibs = nd.$sibs(including_self)\n    return(sibs.length)\n}\n\n\n\n\n/*ance*/\n\nfunction _parent(nd) {\n    let lstsib = _lstsib(nd,true)\n    return(lstsib._parent)\n}\n\nfunction _root(nd) {\n    let ance = nd\n    let old = nd\n    while(ance !== null) {\n        old = ance\n        ance = ance.$parent()\n    }\n    return(old)    \n}\n\nfunction _which_ance(index,nd) {\n    let c = 0\n    let ance = nd\n    while(ance !== null) {\n        if(c === index) {\n            return(ance)\n        } else {\n        }\n        ance = ance.$parent()\n        c = c+1\n    }\n    return(null)\n}\n\nfunction _ances(nd,including_self=false) {\n    let ances = []\n    let ance = nd\n    if(including_self) {\n        ances.push(ance)\n    } else {\n    } \n    ance = ance.$parent()\n    while(ance !== null)  {\n        ances.push(ance)\n        ance = ance.$parent()\n    }\n    return(ances) \n}\n\nfunction _some_ances(nd,...indexes) {\n    let ances = _ances(nd,true)\n    let some = ances.filter(\n        (r,i) => indexes.includes(i)\n    )\n    return(some)      \n}\n\nfunction _ances_count(nd,including_self=false) {\n    let ances = _ances(nd,including_self)\n    return(ances.length)\n}\n\n\n/**/\nfunction _luncle(nd) {\n    let p = nd.$parent()\n    if(p === null) {\n        return(null)\n    } else {\n        return(p.$lsib())\n    } \n}\n\nfunction _runcle(nd) {\n    let p = nd.$parent()\n    if(p === null) {\n        return(null)\n    } else {\n        return(p.$rsib())\n    } \n}\n\nfunction _lcin(nd) {\n    let luncle = nd.$luncle()\n    if(!nd.$is_fstch()) {\n        return(null) \n    } else if(luncle === null) {\n        return(null)\n    } else {\n        return(luncle.$lstch())\n    }\n}\n\nfunction _rcin(nd) {\n    let runcle = nd.$runcle()\n    if(!nd.$is_lstch()) {\n        return(null)\n    } else if(runcle === null) {\n        return(null)\n    } else {\n        return(runcle.$fstch())\n    }\n}\n\n/**/\n\nfunction _lyr(nd) {\n    let rt = nd.$root() \n    let sdfs = rt.$sdfs() \n    let depth = nd.$depth()\n    let lyr = sdfs.filter(nd=>(nd.$depth() === depth))\n    return(lyr)    \n}\n\n/**/\n\nfunction _pbreadth(nd) {\n    let p = nd.$parent()\n    if(p===null) {\n        return(null)\n    } else {\n        return(p.$breadth())\n    }\n}\n\nfunction _breadth(nd) {\n    let lyr = nd.$lyr()\n    let breadth = lyr.indexOf(nd)\n    return(breadth)   \n}\n\nfunction _width(nd) {\n    //只计算叶子个数的宽度\n    let sdfs = nd.$sdfs()\n    sdfs = sdfs.filter(nd=>nd.$is_leaf())\n    return(sdfs.length)\n}\n\nfunction _offset(nd) {\n    //edfs filter-by-isleaf ,and then index \n    //如果是非叶子,dlmost的offset\n    let rt = nd.$root()\n    let edfs = rt.$edfs()\n    let index;\n    if(nd.$is_leaf()) {\n        index = edfs.indexOf(nd) \n    } else {\n        let dlmost = nd.$dlmost_des()\n        index = edfs.indexOf(dlmost)\n    }\n    edfs = edfs.slice(0,index+1)\n    offset = edfs.filter(nd=>nd.$is_leaf()).length - 1\n    return(offset) \n}\n\n/**/\n\n\nfunction _deses(nd,including_self=false) {\n    let drmost = _drmost_des(nd) \n    let sdfs = _sdfs(nd)\n    let index = sdfs.indexOf(drmost) \n    if(including_self) {\n        return(sdfs.slice(0,index+1)) \n    } else {\n        return(sdfs.slice(1,index+1)) \n    } \n}\n\nfunction _lst_lyr_deses(nd) {\n    let deses = nd.$deses(false)\n    let des_depths = deses.map(r=>r.$depth())\n    let max = Math.max(...des_depths)\n    deses = deses.filter(r=>(r.$depth()===max))\n    return(deses) \n}\n\nfunction _which_lyr_deses(index,nd) {\n    let depth = nd.$depth()\n    let deses = nd.$deses(false)\n    let des_depths = deses.map(r=>r.$depth())\n    deses = deses.filter(r=>(r.$depth()===(depth+index)))\n    return(deses)\n}\n\nfunction _some_lyrs_deses(nd,...rel_depths) {\n    let depth = nd.$depth()\n    let abs_depths = rel_depths.map(r=>r+depth)\n    let deses = nd.$deses(false)\n    let des_depths = deses.map(r=>r.$depth())\n    deses = deses.filter(r=>(abs_depths.includes(r.$depth())))\n    return(deses)\n}\n\n\n/*add node */\n\nfunction _prepend_child(nd,child) {\n    if(_is_connectable(child)) {} else { console.log('only root or uninited could be prepend');return(child)} \n    //只有根节点才可以被链接到另一颗树上\n    let cond = nd.$is_leaf()\n    child._tree = nd._tree\n    child._lsib = null\n    if(cond){\n        //child 也是lstch\n        child._rsib = null\n        child._parent = nd\n        //不改动fstch\n    } else {\n        //变更old_fstch\n        let old_fstch = nd._fstch\n        //old_fstch 不再是fstch\n        old_fstch._lsib = undefined\n        //更新child\n        child._rsib = old_fstch\n        //child 不是lstch _parent 置为 未计算\n        child._parent = undefined\n        //不改动fstch\n    }   \n    nd._fstch = child\n    return(child)\n}   \n\n\nfunction _append_child(nd,child) {\n    if(_is_connectable(child)) {} else { console.log('only root or uninited could be append');return(child)}\n    let cond = nd.$is_leaf() \n    child._tree = nd._tree\n    child._rsib = null\n    if(cond){\n        //child 也是lstch\n        nd._fstch = child\n        child._lsib = null\n        //不改动child fstch 维持子树\n    } else {\n        //变更old_lstch\n        let old_lstch = nd.$lstch() \n        //old_lstch 不再是lstch\n        old_lstch._parent = undefined\n        old_lstch._rsib = child\n        //child 不是fstch _lsib置为 undefined\n        child._lsib = undefined\n    }\n    child._parent = nd\n    return(child)\n}\n\n\n\nfunction _add_rsib(nd,rsib) {\n    if(_is_connectable(rsib)) {} else { console.log('only root or uninited could be add');return(rsib)}\n    //root 不可操作\n    if(nd.$is_root()) {\n        console.log(\"cant addrsib to root\")\n        return(nd)\n    }\n    //\n    let cond = nd.$is_lstch()\n    rsib._tree = nd._tree\n    if(cond) {\n        rsib._parent = nd._parent\n        nd._parent = undefined\n        rsib._rsib = null\n    } else {\n        rsib._rsib = nd._rsib\n        rsib._parent = undefined\n    }\n    nd._rsib = rsib\n    //rsib 一定不是fstch\n    rsib._lsib = undefined\n    //\n    return(rsib)\n}\n\n\nfunction _add_lsib(nd,lsib) {\n    if(_is_connectable(lsib)) {} else { console.log('only root or uninited could be add');return(lsib)}\n    //root 不可操作\n    if(nd.$is_root()) {\n        console.log(\"cant addlsib to root\")\n        return(nd)\n    }\n    //\n    let cond = nd.$is_fstch()\n    lsib._tree = nd._tree\n    if(cond) {\n        let parent = nd.$parent() \n        nd._lsib = undefined\n        lsib._lsib = null\n        parent._fstch = lsib\n    } else {\n        let old_lsib = nd.$lsib()\n        old_lsib._rsib = lsib\n        //\n        lsib._lsib = undefined\n    }\n    lsib._rsib = nd\n    //lsib 一定不是lstch\n    lsib._parent = undefined\n    //\n    return(lsib)\n}\n\n\nfunction _insert_child(which,nd,child) {\n    let children = _children(nd)\n    let lngth = children.length\n    if(lngth ===0) {\n        child = _prepend_child(nd,child)\n    } else {\n        let cond = (which<=lngth) && (which >=0)\n        if(!cond) {\n            console.log(\"not in range!!\")\n        } else {\n            if(which === 0) {\n                child = _prepend_child(nd,child)\n            } else if(which === lngth) {\n                child = _append_child(nd,child)\n            } else {\n                let lnd = children[which-1]\n                child = _add_rsib(lnd,child)\n            }   \n        }   \n    }\n    return(child)   \n}   \n\n\n/*sdfs*/\n\nfunction _rsib_of_fst_ance_having_rsib(nd) {\n    let p = nd.$parent()\n    while(p!==null) {\n        let rsib = p.$rsib()\n        if(rsib !== null) {\n            return(rsib)\n        } else {\n            p = p.$parent()  \n        }\n    }\n    return(null)\n}\n\nfunction _sdfs_next(nd) {\n    let fstch = nd.$fstch()\n    if(fstch !== null) {\n        return(fstch)\n    } else {\n        let rsib = nd.$rsib()\n        if(rsib !== null) {\n            return(rsib)\n        } else {\n            return(nd.$rsib_of_fst_ance_having_rsib())\n        }\n    }    \n}\n\nfunction _drmost_des(nd) {\n    let old_lstch = nd\n    let lstch = nd.$lstch()\n    while(lstch !== null) {\n        old_lstch = lstch\n        lstch = lstch.$lstch()\n    }\n    return(old_lstch)\n}\n\nfunction _sdfs_prev(nd) {\n    if(nd.$is_root()) {\n        return(null)\n    }\n    let cond = nd.$is_leaf()\n    if(cond) {\n        let lsib = nd.$lsib()\n        if(lsib !== null) {\n            return(lsib)\n        } else {\n            let parent = nd.$parent()\n            return(parent)\n        }\n    } else {\n        let lsib = nd.$lsib()\n        if(lsib !== null) {\n            let cond = lsib.$is_leaf()\n            if(cond) {\n                return(lsib)\n            } else {\n                return(lsib.$drmost_des())\n            }\n        } else {\n            let parent = nd.$parent()\n            return(parent)\n        }\n    }\n}\n\nfunction _sdfs(nd) {\n    let depth = nd.$depth()\n    if(nd === null) {\n        return([])\n    } else {\n        let sdfs =[nd]\n        nd = nd.$sdfs_next()\n        while(nd!==null && (nd.$depth() >depth) ) {\n            sdfs.push(nd)\n            nd = nd.$sdfs_next()\n        }\n        return(sdfs)  \n    }  \n}\n\n/**/\n\nfunction _dlmost_des(nd) {\n    let old_fstch = nd\n    let fstch = nd.$fstch()\n    while(fstch !== null) {\n        old_fstch = fstch\n        fstch = fstch.$fstch()\n    }\n    return(old_fstch)\n}\n\nfunction _edfs_next(nd) {\n    let rsib = nd.$rsib()\n    if(rsib === null) {\n        //如果没有右兄弟，说明节点是lstch,此时应该返回父节点\n        let p = nd.$parent()\n        return(p)\n    } else {\n       //如果有右兄弟，返回down-left-most-of-rsib\n       return(rsib.$dlmost_des())\n    }\n}\n\nfunction _lsib_of_fst_ance_having_lsib(nd) {\n    /*\n        along the parent chain until root,not_including_self\n        if the parent have lsib,return the lsib-of-parent\n        ---------\n    */\n    let parent = nd.$parent() \n    while(parent!==null) {\n        let lsib = parent.$lsib()\n        if(lsib!==null) {\n            return(lsib)\n        } else {\n            parent = parent.$parent()\n        }\n    }\n    return(null)\n}\n\nfunction _edfs_prev(nd) {\n    let cond = nd.$is_leaf() \n    if(!cond) {\n        return(nd.$lstch())\n    } else {\n       let lsib = nd.$lsib()\n       if(lsib === null) {\n           return(nd.$lsib_of_fst_ance_having_lsib())\n       } else {\n           return(lsib)\n       }\n    }   \n}\n\n\n\nfunction _edfs(nd) {\n    let edfs = []\n    let nxt = nd.$dlmost_des()\n    while(nxt !== null ) {\n        edfs.push(nxt)\n        if(nxt === nd) {\n            break;\n        } else {\n            nxt = nxt.$edfs_next()\n        }\n    }\n    return(edfs)\n\n}\n\n\n/**/\n\nfunction _sedfs_next(nd) {\n    let visited = nd.$visited\n    let cond = nd.$is_leaf() \n    if(cond) {\n        if(visited) {\n            let rsib = nd.$rsib()\n            if(rsib === null) {\n                return(nd.$parent())\n            } else {\n                return(rsib)\n            }\n        } else {\n            nd.$visited = true\n            return(nd)\n        }\n    } else {\n        if(visited) {\n            let rsib = nd.$rsib()\n            if(rsib === null) {\n                return(nd.$parent())\n            } else {\n                return(rsib)\n            }\n        } else {\n            nd.$visited = true\n            return(nd.$fstch())\n        }\n    }   \n}\n\nfunction _sedfs_prev(visited,nd) {\n    let cond = nd.$is_leaf() \n    if(cond) {\n        if(visited) {\n            return(nd)\n        } else {\n            let lsib = nd.$lsib()\n            if(lsib === null) {\n                return(nd.$parent())\n            } else {\n                return(lsib)\n            }\n        }\n    } else {\n        if(visited) {\n            return(nd.$lstch())\n        } else {\n            let lsib = nd.$lsib()\n            if(lsib === null) {\n                return(nd.$parent())\n            } else {\n                return(lsib)\n            }\n        }\n    }\n}\n\nfunction _clear_visited(nd) {\n    let sdfs = nd.$sdfs()\n    sdfs.forEach(\n        nd=>{delete nd.$visited}\n    )\n}\n\nfunction _is_sedfs_traverse_finished(startnd,nd) {\n    let cond = (nd.$visited) && (startnd === nd)\n    return(cond)\n}\n\nfunction _sedfs(nd) {\n    _clear_visited(nd);\n    let sedfs = []\n    let st = new Set()\n    let startnd = nd\n    while(!_is_sedfs_traverse_finished(startnd,nd)) {\n        if(st.has(nd)) {\n            nd.$close_at = sedfs.length\n        } else {\n            nd.$open_at = sedfs.length\n            st.add(nd) \n        }\n        sedfs.push(nd)\n        nd = _sedfs_next(nd)\n    }\n    startnd.$close_at = sedfs.length\n    sedfs.push(startnd)\n    sedfs.forEach(nd=>{delete nd.$visited})     \n    return(sedfs)    \n}\n\n\n/**/\nfunction _leafize(nd) {\n    nd._fstch = null\n    return(nd)\n}\n\nfunction _rootize(nd) {\n    nd._lsib = null\n    nd._rsib = null\n    nd._parent = null\n    return(nd)\n}\n\nfunction _update_disconnected_nodes(nd) {\n    let nsdfs = nd.$sdfs() \n    nsdfs.forEach(\n       nd=> {\n           nd._tree = nsdfs[0]\n       }\n    )\n    return(nsdfs)\n}\n\n\n\nfunction _disconn(nd) {\n    let cond = nd.$is_root() \n    if(cond) {\n        //do nothing\n        return(nd)\n    } else if(nd.$is_lonely()) {\n        //\n        let parent = nd.$parent() \n        _leafize(parent); \n        let nsdfs = _update_disconnected_nodes(nd);\n        _rootize(nd);\n        return(nd)\n    } else {\n        if(nd.$is_fstch()) {\n            //节点变味新树的根节点\n            let rsib = nd.$rsib()\n            //右兄弟变成了fstch, lsib 指向null\n            rsib._lsib = null\n            //右兄弟变成了fstch,parent要指向rsib\n            // parent 的fstch 要指向rsib\n            let parent = nd.$parent() \n            parent._fstch = nd._rsib\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = _update_disconnected_nodes(nd)\n            //nd 变为分离出去的tree的root\n            _rootize(nd);\n            return(nd)\n        } else if(nd.$is_lstch()) {    \n            //节点变味新树的根节点\n            let lsib = nd.$lsib() \n            lsib._rsib = nd._rsib\n            //左兄弟变成了lstch,左邻居要指向parent\n            lsib._parent = nd._parent\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = _update_disconnected_nodes(nd)\n            //nd 变为分离出去的tree的root\n            _rootize(nd);\n            return(nd)\n        } else {\n            //节点变味新树的根节点\n            let lsib = nd.$lsib() \n            lsib._rsib = nd._rsib\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = _update_disconnected_nodes(nd)\n            //nd 变为分离出去的tree的root\n            _rootize(nd);\n            return(nd)\n        }\n    }  \n}\n\n\n\n/**/\nfunction _add_extra(d,nd) {\n    for(let k in d) {\n        nd[k] = d[k]\n    }\n}\n/**/\n\nfunction _nd2unhandled_ele(nd) {\n    let ele = {}\n    ele._nd = nd\n    ele._children = []\n    return(ele)\n}\n\n\nfunction _sdfs2mat(sdfs) {\n    let m = []\n    let nd = sdfs[0]\n    let unhandled = [_nd2unhandled_ele(nd)]\n    unhandled[0]._pbreadth = null\n    while(unhandled.length>0){\n        let next_unhandled = []\n        for(let i=0;i<unhandled.length;i++) {\n            unhandled[i]._breadth = i\n            unhandled[i]._depth = m.length\n            let children = unhandled[i]._nd.$children() \n            children = children.map(nd=>_nd2unhandled_ele(nd))\n            children.forEach(\n                (r,index)=>{\n                    r._pbreadth = unhandled[i]._breadth\n                    unhandled[i]._children.push([(m.length+1),next_unhandled.length+index])\n                }\n            )\n            next_unhandled = next_unhandled.concat(children)\n        }\n        let lyr = unhandled\n        m.push(lyr)\n        unhandled = next_unhandled\n    }  \n    return(m)\n}\n\n\n\nfunction _init_nest_dele_via_ele(ele,children_k='_children') {\n    let nd = ele._nd\n    let d = {}\n    d[children_k] = []\n    d.$guid = nd.$guid\n    for(let k in nd) {\n        let cond = cmmn.is_cu_property(k)\n        if(cond){\n            d[k] = nd[k]\n        }\n    }\n    return(d)\n}\n\nfunction _mat_to_nest_dict(m,children_k='_children') {\n    let ele = m[0][0]\n    let nest = _init_nest_dele_via_ele(ele,children_k)\n    let unhandled = [{d:nest,ele:ele}]\n    while(unhandled.length>0) {\n        let next_unhandled = []\n        for(let i=0;i<unhandled.length;i++) {\n            let orb = unhandled[i]\n            let d = orb.d\n            let ele = orb.ele\n            let chlocs = orb.ele._children\n            let children = chlocs.map(r=>m[r[0]][r[1]])\n            for(let j=0;j<children.length;j++) {\n                let chele = children[j]\n                let chd = _init_nest_dele_via_ele(chele,children_k)\n                d[children_k].push(chd)\n                let unhandled_ele = {d:chd,ele:chele}\n                next_unhandled.push(unhandled_ele)\n            }\n        }\n        unhandled = next_unhandled\n    }\n    return(nest)\n}\n\n\nfunction _init_node_via_nest_dele(d,children_k='_children') {\n    let nd = new Tree()\n    if(d.$guid !== undefined) {nd.$guid = d.$guid}\n    for(let k in d) {\n        let cond = cmmn.is_cu_property(k) && (children_k !== k)\n        if(cond){\n            nd[k] = d[k]\n        }\n    }\n    return(nd)\n}\n\n\n\nfunction _load_from_nest_dict(nest,children_k='_children') {\n    let rt = _init_node_via_nest_dele(nest,children_k)\n    let unhandled = [{d:nest,nd:rt}]\n    while(unhandled.length>0) {\n        let next_unhandled = []\n        for(let i=0;i<unhandled.length;i++) {\n            let d = unhandled[i].d\n            let nd = unhandled[i].nd\n            let children = (d[children_k] === undefined)?[]:d[children_k];\n            for(let j=0;j<children.length;j++) {\n                let chd = children[j]\n                let chnd = _init_node_via_nest_dele(chd,children_k)\n                nd.$append_child(chnd)\n                let unhandled_ele = {d:chd,nd:chnd}\n                next_unhandled.push(unhandled_ele)\n            }\n        }\n        unhandled = next_unhandled\n    }\n    return(rt)\n}\n\n\n\n\n/**/\n\nclass _Node extends EventTarget {\n    constructor() {\n        super();\n        this._fstch = null\n        this._lsib = undefined\n        this._rsib = undefined\n        this._parent = undefined\n        this._tree = undefined\n        this.$guid = cmmn.gen_guid()\n    }\n    $is_inited() {\n        return(_is_inited(this))\n    }\n    $is_root() {\n        return(_is_root(this))\n    }\n    $is_fstch() {\n        return(_is_fstch(this))\n    }\n    $is_lstch() {\n        return(_is_lstch(this))\n    }   \n    $is_leaf() {\n        return(_is_leaf(this))\n    }\n    $is_lonely() {\n        return(_is_lonely(this))\n    }\n    //child\n    $fstch() {\n        return(this._fstch)\n    }\n    $lstch() {\n        return(_lstch(this))\n    }\n    $which_child(index) {\n        return(_which_child(index,this))\n    }\n    $some_children(...indexes) {\n        return(_some_children(this,...indexes))\n    }\n    $children() {\n        return(_children(this))\n    }\n    $children_count() {\n        return(_children_count(this))\n    }\n    //\n    $rsib() {\n        return(this._rsib)\n    }\n    $lsib() {\n        return(_lsib(this))\n    }\n    $fstsib(including_self=false) {\n        return(_fstsib(this,including_self))\n    } \n    $lstsib(including_self=false) {\n        return(_lstsib(this,including_self))\n    }\n    $psibs() {\n        return(_psibs(this))\n    }\n    $fsibs() {\n        return(_fsibs(this))\n    }\n    $which_sib(index) {\n        return(_which_sib(index,this))\n    }\n    $some_sibs(...indexes) {\n        return(_some_sibs(this,...indexes))\n    }\n    $sibseq() {\n        return(_sibseq(this))\n    }\n    $sibs(including_self=false) {\n        return(_sibs(this,including_self))\n    }\n    $sibs_count(including_self=false) {\n        return(_sibs_count(this,including_self))\n    } \n    //\n    $parent() {\n        return(_parent(this))\n    } \n    $root() {\n        return(_root(this))\n    } \n    $ances(including_self=false) {\n        return(_ances(this,including_self))\n    }\n    $which_ance(index) {\n        return(_which_ance(index,this))\n    }\n    $some_ances(...indexes) {\n        return(_some_ances(this,...indexes))\n    }\n    $ances_count(including_self=false) {\n        return(_ances_count(this,including_self))\n    }\n    //\n    $prepend_child(child) {\n        child = (child===undefined)?(new _Node()):child\n        return(_prepend_child(this,child))       \n    }\n    $insert_child(which,child) {\n        child = (child===undefined)?(new _Node()):child\n        return(_insert_child(which,this,child))\n    }\n    $append_child(child)  {\n        child = (child===undefined)?(new _Node()):child\n        return(_append_child(this,child))\n    }\n    $clone() {\n        if(_is_root(this)) {\n            let ndict = _dump(this)\n            return(_load(ndict))\n        } else {\n            let index = _sibseq(this)\n            let parent = _parent(this)\n            _disconn(this)\n            let ndict = _dump(this)\n            let dup = _load(ndict)\n            _insert_child(index,parent,this)\n            return(dup)   \n        } \n    }\n    $append_children(n,child) {\n        let children = []\n        for(let i=0;i<n;i++) {\n            let ch = (child===undefined)?(new _Node()):child.$clone()\n            ch = _append_child(this,ch)\n            children.push(ch)\n        }\n        return(children)\n    }\n    //\n    $add_rsib(rsib) {\n        rsib = (rsib===undefined)?(new _Node()):rsib\n        return(_add_rsib(this,rsib))\n    }\n    $add_lsib(lsib)  {\n        lsib = (lsib===undefined)?(new _Node()):lsib\n        return(_add_lsib(this,lsib))\n    }  \n    //\n    $rsib_of_fst_ance_having_rsib() {\n        return(_rsib_of_fst_ance_having_rsib(this))\n    } \n    $sdfs_next() {\n        return(_sdfs_next(this)) \n    }\n    $drmost_des() {\n        return(_drmost_des(this))\n    }\n    $sdfs_prev() {\n        return(_sdfs_prev(this))\n    }\n    $sdfs() {\n        return(_sdfs(this))\n    }\n    //\n    $dlmost_des() {\n        return(_dlmost_des(this))\n    }\n    $edfs_next() {\n        return(_edfs_next(this))\n    }\n    $lsib_of_fst_ance_having_lsib() {\n        return(_lsib_of_fst_ance_having_lsib(this))\n    }\n    $edfs_prev() {\n        return(_edfs_prev(this))\n    }\n    $edfs() {\n        return(_edfs(this))\n    }\n    $offset() {\n        return(_offset(this))\n    }\n    //\n    $sedfs_next() {\n        return(_sedfs_next(this))\n    }\n    $sedfs_prev(visited) {\n        return(_sedfs_prev(this))\n    }\n    $sedfs(){\n        return(_sedfs(this))\n    }\n    //\n    $deses(including_self=false) {\n        return(_deses(this,including_self))\n    }\n    $lst_lyr_deses() {\n        return(_lst_lyr_deses(this))\n    }\n    $which_lyr_deses(index) {\n        return(_which_lyr_deses(index,this))\n    }\n    $some_lyrs_deses(...rel_depths) {\n        return(_some_lyrs_deses(this,...rel_depths))\n    }\n    //\n    $count(including_self=true) {\n        return(_deses(this,including_self).length)\n    }\n    $depth(including_self=false) {\n        return(_ances(this,including_self).length)\n    }\n    $height() {\n        let depth = this.$depth()\n        let sdfs = this.$sdfs()\n        let des_depths = sdfs.map(nd=>nd.$depth())\n        let max = Math.max(...des_depths)\n        return(max-depth+1)        \n    }\n    $pbreadth() {\n        return(_pbreadth(this))\n    }\n    $breadth() {\n        return(_breadth(this))\n    }\n    $width() {\n        return(_width(this))\n    }\n    //\n    $lyr() {\n        return(_lyr(this))\n    }\n    //\n    $lcin() {\n        return(_lcin(this))\n    }\n    $rcin() {\n        return(_rcin(this))\n    }\n    $luncle() {\n        return(_luncle(this))\n    }\n    $runcle() {\n        return(_runcle(this))\n    }\n    //\n    $sdfs_repr() {\n        let rt = this.$root()\n        let tree = _sdfs(rt)\n        let sdfs = _sdfs(this)\n        let depths = sdfs.map(nd=>nd.$depth()) \n        let indents = depths.map(depth=>'    '.repeat(depth))\n        indents.forEach((indent,i)=>{console.log(indent+'['+tree.indexOf(sdfs[i])+']'+' : '+sdfs[i].$guid)})    \n    }\n    $sedfs_repr() {\n        let rt = this.$root()\n        _set_id(rt)       \n        let sedfs = _sedfs(this)\n        sedfs.forEach(\n            (nd,i)=> {\n                let depth = nd.$depth()\n                let indent = '    '.repeat(depth)\n                if(i === nd.$open_at)  {\n                    console.log(indent+'<'+nd._id+' : ' + nd.$guid +'>')\n                }\n                if(i === nd.$close_at)  {\n                    console.log(indent+'</'+nd._id+' : ' +nd.$guid +'>')\n                }                               \n            }\n        )\n    }\n    //\n    $disconn() {\n        return(_disconn(this))\n    }\n    $rm_fstch() {\n        let fstch = this._fstch\n        return(_disconn(fstch))\n    }\n    $rm_lstch() {\n        let lstch = _lstch(this)\n        return(_disconn(lstch))\n    }\n    $rm_which(index) {\n        let child = _which_child(index,this) \n        return(_disconn(child))\n    }\n    $rm_some_children(...indexes) {\n        let children = _some_children(this,...indexes)\n        return(children.map(child=>_disconn(child)))\n    }\n    $rm_all_children() {\n        let children = _children(this)\n        return(children.map(child=>_disconn(child)))\n    }\n    //\n    $dump() {\n        if(this.$is_root()) {\n            return(_dump(this))\n        } else {\n            console.log('only root !!!')\n        }\n    }\n    $dump2file(fn) {\n        if(this.$is_root()) {\n            let ndict = _dump(this)\n            ndutil.wjson(fn,ndict)\n        } else {\n            console.log('only root !!!')\n        }\n    }\n    //\n    $sdfs2mat() {\n        return(_sdfs2mat(_sdfs(this)))\n    }\n    $nest_dict(children_k='_children') {\n        let m = _sdfs2mat(_sdfs(this))\n        let nest = _mat_to_nest_dict(m,children_k)\n        return(nest)\n    }\n    //\n}\n\n\n/**/\n\nfunction _set_id(nd) {\n    //root代表一棵树, 给每个节点加sdfs_seq\n    let tree = _sdfs(nd)\n    tree.forEach(\n        (nd,i) => {nd._id = i}\n    )\n    return(tree)\n}\n\n\nfunction _rtjson2rt(root) {\n    let rt = new Tree()\n    rt._id = root._id\n    rt.$guid = root._guid\n    return(rt)       \n}\n\nfunction _get_ancend_via_id(id,nd) {\n    while(nd._id !== id) {\n        nd=nd._parent\n    }\n    return(nd)\n}\n\nfunction fill_other_attrs_for_load(nd,d) {\n    let other_ks = get_non_struct_keys(d)\n    for(let k of other_ks) {\n        nd[k] = d[k]\n    }\n    return(nd)\n}\n\n\n\nfunction _load(ndict) {\n    //从一个json结构变成tree,返回root\n    let k = cmmn.dict_keys(ndict)[0]\n    let root = ndfunc.get_root(ndict[k],ndict)\n    let rt = _rtjson2rt(root)\n    rt = fill_other_attrs_for_load(rt,root)\n    let prnd = rt\n    let prnj = root\n    let nj = ndfunc.get_sdfs_next(prnj,ndict)\n    let nd;\n    while(nj!==null) {\n        if(prnj._fstch ===nj._id) {\n            nd = prnd.$prepend_child()\n            nd._id = nj._id\n            nd.$guid = nj._guid\n            nd = fill_other_attrs_for_load(nd,nj)\n            prnd = nd\n            prnj = nj\n            nj = ndfunc.get_sdfs_next(prnj,ndict)\n        } else if(prnj._rsib ===nj._id) {\n            nd = prnd.$add_rsib()\n            nd._id = nj._id\n            nd.$guid = nj._guid\n            nd = fill_other_attrs_for_load(nd,nj)\n            prnd = nd\n            prnj = nj\n            nj = ndfunc.get_sdfs_next(prnj,ndict)\n        } else if(nj._parent!==null && nj._parent!==undefined) {\n            //lstch,并且上一個節點是drmost-of-lsib\n            let pid = nj._parent\n            prnd = _get_ancend_via_id(pid,prnd)\n            nd = prnd.$append_child()\n            nd._id = nj._id\n            nd.$guid = nj._guid\n            nd = fill_other_attrs_for_load(nd,nj)\n            prnd = nd\n            prnj = nj\n            nj = ndfunc.get_sdfs_next(prnj,ndict)\n        } else if(nj._parent===undefined){\n            //非lstch,并且上一個節點是drmost-of-lsib\n            let pnj = ndfunc.get_parent(nj,ndict)\n            let pid = pnj._id\n            prnd = _get_ancend_via_id(pid,prnd)\n            nd = prnd.$append_child()\n            nd._id = nj._id\n            nd.$guid = nj._guid\n            nd = fill_other_attrs_for_load(nd,nj)\n            prnd = nd\n            prnj = nj\n            nj = ndfunc.get_sdfs_next(prnj,ndict)\n        } else {\n            console.log('Impossible',prnd,prnj,nj)\n        } \n    }\n    return(rt)\n}\n\nfunction _dictize_nd_property(nd,k) {\n    if(nd[k] === null) {\n        return(null)\n    } else if(nd[k] === undefined) {\n        return(undefined) \n    } else {\n        return(nd[k]._id)\n    }\n}\n\nfunction get_non_struct_keys(nd) {\n    let all_ks = cmmn.dict_keys(nd)\n    let other_ks = all_ks.filter(\n        r=>!(STRUCT_KEYS.includes(r))\n    )\n    return(other_ks)\n}\n\nfunction fill_other_attrs_for_dump(nd,d) {\n    let other_ks = get_non_struct_keys(nd)\n    for(let k of other_ks) {\n        d[k] = nd[k]\n    }\n    return(d)\n}\n\nfunction _dump(rt) {\n    //把一个nd结构变成json结构, 这个nd 相当于脱离了tree的一个deepcopy\n    let sdfs = _set_id(rt)\n    //let sdfs = rt.$sdfs()\n    let treeid = rt._id\n    let nodes_dict = {}\n    sdfs.forEach(\n        (nd,i) => {\n            let d = {}\n            d._tree = treeid\n            d._fstch = _dictize_nd_property(nd,'_fstch') \n            d._lsib = _dictize_nd_property(nd,'_lsib')\n            d._rsib = _dictize_nd_property(nd,'_rsib') \n            d._parent = _dictize_nd_property(nd,'_parent') \n            d._id = nd._id\n            d._guid = nd.$guid\n            //\n            d = fill_other_attrs_for_dump(nd,d)\n            //\n            nodes_dict[nd._id] = d\n        }\n    )\n    return(nodes_dict)\n}\n\n\nclass Tree extends _Node {\n    constructor() {\n        super();\n        //初始化为根节点,根节点代表一棵树\n        this._fstch = null\n        this._lsib = null\n        this._rsib = null\n        this._parent = null\n        this._tree = this\n    }\n    $is_parent_of(nd) {\n        let p = nd.$parent()\n        return(p===this)\n    }\n    $is_root_of(nd) {\n        let rt = nd.$root()\n        return(rt === this)\n    }\n    $is_descendant_of(nd) {\n        let deses = nd.$deses(false)\n        let index = deses.indexOf(this)\n        return(index >=0)\n    }\n    $is_inclusive_descendant_of(nd) {\n        let deses = nd.$deses(true)\n        let index = deses.indexOf(this)\n        return(index >=0)\n    }\n    $is_ancestor_of(nd) {\n        let ances = nd.$ances(false)\n        let index = ances.indexOf(this)\n        return(index >=0)         \n    }\n    $is_inclusive_ancestor_of(nd) {\n        let ances = nd.$ances(true)\n        let index = ances.indexOf(this)\n        return(index >=0) \n    }\n    $is_sibling_of(nd) {\n        let sibs = nd.$sibs(false)\n        let index = sibs.indexOf(this)\n        return(index >=0)\n    }\n    $is_inclusive_siblings_of(nd) {\n        let sibs = nd.$sibs(true)\n        let index = sibs.indexOf(this)\n        return(index >=0)\n    }\n    $is_preceding_of(nd) {\n        let sdfs = nd.$sdfs()\n        let ndindex = sdfs.indexOf(nd)\n        let this_index = sdfs.indexof(this)\n        return(this_index>=0 && this_index < ndindex)\n    }\n    $is_following_of(nd) {\n        let sdfs = nd.$sdfs()\n        let ndindex = sdfs.indexOf(nd)\n        let this_index = sdfs.indexof(this)\n        return(this_index > ndindex)\n    }\n    $is_first_child_of(nd) {\n        return(this === nd.$fstch())\n    }\n    $is_child_of(nd) {\n        let children = nd.$children()\n        let index = children.indexOf(this)\n        return(index>=0)\n    }\n    $is_last_child_of(nd) {\n        return(this === nd.$lstch())\n    }\n    $is_previous_sibling_of(nd) {\n        return(this === nd.$lsib())\n    }\n    $is_next_sibling_of(nd) {\n        return(this === nd.$rsib())\n    }\n    $index() {\n        return(this.$sibseq())    \n    } \n    $sdfs_index() {\n        let sdfs = this.$sdfs()\n        return(sdfs.indexOf(this))\n    }\n}\n\nfunction load(from) {\n    if(typeof(from) === 'string') {\n        let ndict = ndutil.rjson(from)\n        return(_load(ndict))\n    } else if(typeof(from) === 'object') {\n        let ndict = from\n        return(_load(ndict))\n    } else {\n        return(new Tree())\n    }\n}\n\nfunction load_from_nest_dict(nest,children_k='_children') {\n    return(_load_from_nest_dict(nest,children_k))\n}\n\n\nfunction clone(nd) {\n    let ndcit = nd.$dump()\n    return(load(ndict))\n}\n\n//struct\nfunction get_cu_sign(nd,cu_sign_func,...args) {\n    let out = cu_sign_func(nd,...args)\n    out=  new Buffer.from(out).toString('base64')\n    return(out)    \n}\n\nfunction get_internal_sign_ignore_order(nd) {\n    let internal = nd.$ances(true).map(r=>r.$children().length)\n    internal = internal.join('-')\n    return(internal)\n}\n\nfunction get_internal_sign_keep_order(nd) {\n    let internal = nd.$pbreadth()+'-'+nd.$breadth()+'-'+nd.$depth()\n    return(internal)\n}\n\n\nfunction get_sign_ignore_order(nd,cu_sign_func,...args) {\n    let sign = get_internal_sign_ignore_order(nd)\n    if(cu_sign_func){\n        out = get_cu_sign(nd,cu_sign_func,...args)\n        sign = sign + '@' + out\n    } \n    return(sign)\n}\n\nfunction get_sign_keep_order(nd,cu_sign_func,...args) {\n    let sign = get_internal_sign_keep_order(nd)\n    if(cu_sign_func){\n        out = get_cu_sign(nd,cu_sign_func,...args)\n        sign = sign + '@' + out\n    }\n    return(sign)\n}\n\n\nfunction struct_eq(reorder,sign_func,tree0,tree1,cu_sign_func,...args) {\n    let sdfs0 = tree0.$sdfs()\n    let sdfs1 = tree1.$sdfs()\n    if(sdfs0.length !== sdfs1.length){\n        return(false)\n    } else {\n        let signs0 = sdfs0.map(nd=>sign_func(nd,cu_sign_func,...args))\n        let signs1 = sdfs1.map(nd=>sign_func(nd,cu_sign_func,...args))\n        if(reorder) {\n            signs0.sort()\n            signs1.sort()\n        }\n        for(let i=0;i<signs0.length;i++) {\n            let sign0 = signs0[i]\n            let sign1 = signs1[i]\n            if(sign0 !== sign1){\n                return(false)\n            }\n        }\n    }\n    return(true)\n}\n\nfunction struct_eq_keep_order(tree0,tree1,cu_sign_func,...args) {\n    return(struct_eq(false,get_sign_keep_order,tree0,tree1,cu_sign_func,...args))\n}\n\nfunction struct_eq_ignore_order(tree0,tree1,cu_sign_func,...args) {\n    return(struct_eq(true,get_sign_ignore_order,tree0,tree1,cu_sign_func,...args))\n}\n\n//\n\nmodule.exports = {\n    Node:_Node,\n    Tree:Tree,\n    Root:Tree,\n    load:load,\n    load_from_nest_dict:load_from_nest_dict,\n    clone:clone,\n    get_cu_sign,\n    get_internal_sign_ignore_order,\n    get_internal_sign_keep_order,\n    get_sign_keep_order,\n    struct_eq:struct_eq,\n    struct_eq_keep_order:struct_eq_keep_order,\n    get_sign_ignore_order,\n    struct_eq_ignore_order:struct_eq_ignore_order,\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","//https://dom.spec.whatwg.org/#callbackdef-eventlistener\n\nclass EventListenerOptions {\n    constructor() {\n        this.capture = false    \n    }\n}\n\nclass AddEventListenerOptions extends EventListenerOptions {\n    constructor() {\n        this.passive = false\n        this.once = false\n    }\n}\n\nclass EventListener {\n    handleEvent(event) {\n    }\n}\n\n\nclass EventTarget {\n    constructor(){\n    }\n    addEventListener(type,callback,options={}) {\n    }\n    removeEventListener(type,callback,options={}) {\n    }\n    dispatchEvent(event) {\n    }\n}\n\n\n\nmodule.exports = {\n    EventTarget\n}\n","const ndfunc = require('./ndfunc.js')\nconst cmmn = require('./cmmn.js')\n\nconst dflt_sdfs_show_connd = {\n    't':'├── ',\n    'v':'│   ',\n    'l':'└── ',\n    'ws':'    '\n}\n\nconst dflt_edfs_show_connd = {\n    't':'├── ',\n    'v':'│   ',\n    'l':'┌── ',\n    'ws':'    '\n}\n\n\n\nfunction dflt_calc_conn_map_func(conn) {\n    let rslt;\n    if(conn==='t') {\n        rslt = 'v'\n    } else if(conn === 'v') {\n        rslt = 'v'\n    } else {\n        rslt = 'ws'\n    }\n    return(rslt)\n}\n\n\n\nfunction conns2repr(conns,show_connd) {\n    conns = conns.map(conn=>show_connd[conn])\n    return(conns.join(''))\n}\n\n\nfunction clear_ui(nodes) {\n    for(let id in nodes) {\n        delete nodes[id]._ui\n    }\n}\n\n//sdfs\n\nfunction dflt_sdfs_calc_conns(nd,nodes) {\n    nd._ui = {}\n    if(ndfunc.is_root(nd)){\n        //跟节点没有前导ui 符号\n        nd._ui.conns = []\n        nd._ui.display = true\n    } else {\n        let parent = ndfunc.get_parent(nd,nodes)\n        //获取父节点的前导ui 符号序列数组\n        let pconns = parent._ui.conns\n        let conns = pconns.map(conn=>dflt_calc_conn_map_func(conn))\n        let cond = ndfunc.is_lstch(nd)\n        if(cond) {\n            conns.push('l')\n        } else {\n            conns.push('t')\n        }\n        nd._ui.conns = conns\n        nd._ui.display = true\n    }\n    return(nd)\n}\n\n\n\nfunction get_sdfs_repr_arr(nd,nodes,f){\n    let depth = ndfunc.get_depth(nd,nodes)\n    let sdfs = ndfunc.get_deses(nd,nodes,true)\n    sdfs = sdfs.map(nd=>dflt_sdfs_calc_conns(nd,nodes))\n    let conns_array = sdfs.map(nd=>nd._ui.conns)\n    conns_array = conns_array.map(conns=>conns.slice(depth))\n    conns_array = conns_array.map(conns=>conns2repr(conns,dflt_sdfs_show_connd))\n    let arr = conns_array.map((conns,i)=>(conns+'['+sdfs[i]._id+']'+' : '+sdfs[i]._guid))\n    arr = arr.filter((r,i)=>(sdfs[i]._ui.display === true))\n    return(arr)\n}\n\n\nfunction dflt_sdfs_show_callback() {\n}\n\n\nfunction sdfs_show_all(nd,nodes,f=dflt_sdfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_sdfs_repr_arr(root,nodes,f)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction sdfs_show_root_tree(nodes,f=dflt_sdfs_show_callback){\n    let k = cmmn.dict_keys(nodes)[0]\n    let nd = ndfunc.get_root(nodes[k],nodes)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\n\nfunction sdfs_show_from(nd,nodes,from,f=dflt_sdfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_sdfs_repr_arr(root,nodes,f)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(from)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction sdfs_show_to(nd,nodes,to,f=dflt_sdfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_sdfs_repr_arr(root,nodes,f)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(0,to)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\nfunction sdfs_show_from_to(nd,nodes,from,to,f=dflt_sdfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_sdfs_repr_arr(root,nodes,f)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(from,to)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\n//\n\nfunction dflt_edfs_show_callback() {\n}\n\nfunction dflt_edfs_calc_conns(nd,nodes) {\n    nd._ui = {}\n    if(ndfunc.is_root(nd)){\n        //跟节点没有前导ui 符号\n        nd._ui.conns = []\n    } else {\n        let parent = ndfunc.get_parent(nd,nodes)\n        //获取父节点的前导ui 符号序列数组\n        let pconns = parent._ui.conns\n        let conns = pconns.map(conn=>dflt_calc_conn_map_func(conn))\n        let cond = ndfunc.is_fstch(nd)\n        if(cond) {\n            conns.push('l')\n        } else {\n            conns.push('t')\n        }\n        nd._ui.conns = conns\n    }\n    return(nd)\n}\n\n\nfunction get_edfs_repr_arr(nd,nodes,f){\n    let depth = ndfunc.get_depth(nd,nodes)\n    let edfs = ndfunc.get_edfs(nd,nodes)\n    edfs.reverse()\n    edfs = edfs.map(nd=>dflt_edfs_calc_conns(nd,nodes))\n    edfs.reverse()\n    let deses = ndfunc.get_deses(nd,nodes,true)\n    let ids = deses.map(r=>r._id)\n    edfs = edfs.filter(r=>ids.includes(r._id))\n    let conns_array = edfs.map(nd=>nd._ui.conns)\n    conns_array = conns_array.map(conns=>conns.slice(depth,conns.length))\n    conns_array = conns_array.map(conns=>conns2repr(conns,dflt_edfs_show_connd))\n    let arr = conns_array.map((conns,i)=>(conns+edfs[i]._id))\n    return(arr)\n}\n\n\nfunction edfs_show_all(nd,nodes,f=dflt_edfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_edfs_repr_arr(root,nodes,f)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction edfs_show_root_tree(nodes,f=dflt_edfs_show_callback){\n    let k = cmmn.dict_keys(nodes)[0]\n    let nd = ndfunc.get_root(nodes[k],nodes)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction edfs_show_from(nd,nodes,from,f=dflt_edfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_edfs_repr_arr(nd,nodes,f)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(0,arr.length-from)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction edfs_show_to(nd,nodes,to,f=dflt_edfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_edfs_repr_arr(nd,nodes,f)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(arr.length-to,arr.length)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\nfunction edfs_show_from_to(nd,nodes,from,to,f=dflt_edfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_edfs_repr_arr(nd,nodes,f)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(arr.length-to,arr.length-from)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\n//sedfs\n\nconst dflt_sedfs_show_connd = {\n    indent:'    ',\n    stag_prefix:'<',\n    stag_suffix:'>',\n    etag_prefix:'</',\n    etag_suffix:'>',\n}\n\n\nfunction gen_tag(tag,prefix,suffix) {\n    return(prefix+tag+suffix)\n}\n\nfunction sedfs_show_all(nd,nodes,show_connd=dflt_sedfs_show_connd) {\n    let sedfs = ndfunc.get_sedfs(nd,nodes,true)\n    let depths = sedfs.map(nd=>ndfunc.get_depth(nd,nodes))\n    let depth = ndfunc.get_depth(nd,nodes)\n    let indents = depths.map(r=>show_connd.indent.repeat(r-depth)) \n    let tags = sedfs.map(\n        nd=>{\n            if(nd._$visited === false) {\n                return(gen_tag(nd._id,show_connd.stag_prefix,show_connd.stag_suffix))\n            } else {\n                return(gen_tag(nd._id,show_connd.etag_prefix,show_connd.etag_suffix))\n            }\n        }\n    )\n    let lines = tags.map((tag,i)=>(indents[i]+tag)) \n    let repr = lines.join('\\n')\n    console.log(repr)\n}\n\nfunction sdfs_expand(nd,nodes,f=dflt_sdfs_show_callback) {\n    let sdfs = ndfunc.get_deses(nd,nodes,false)\n    sdfs.forEach(nd=>{nd._ui.display = true})\n    return(nodes)\n}\n\nfunction sdfs_foldup(nd,nodes,f=dflt_sdfs_show_callback) {\n    let sdfs = ndfunc.get_deses(nd,nodes,false)\n    sdfs.forEach(nd=>{nd._ui.display = false})\n    return(nodes)\n}\n\n\nmodule.exports = {\n    dflt_calc_conn_map_func,\n    conns2repr,\n    clear_ui,\n    //sdfs\n    dflt_sdfs_show_connd,\n    dflt_sdfs_calc_conns,\n    get_sdfs_repr_arr,\n    sdfs_show_all,\n    sdfs_show_root_tree,\n    sdfs_show_from,\n    sdfs_show_to,\n    sdfs_show_from_to,\n    sdfs_expand,\n    sdfs_foldup,\n    //edfs\n    dflt_edfs_show_connd,\n    dflt_edfs_calc_conns,\n    get_edfs_repr_arr,\n    edfs_show_all,\n    edfs_show_root_tree,\n    edfs_show_from,\n    edfs_show_to,\n    edfs_show_from_to,\n    //sedfs\n    dflt_sedfs_show_connd,\n    gen_tag,\n    sedfs_show_all,           \n}\n\n"],"sourceRoot":""}